[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2023-03-21T13:04:09.011Z", "user": 3, "content_type": 17, "object_id": "1", "object_repr": "testyandex", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2023-03-21T13:07:20.924Z", "user": 3, "content_type": 17, "object_id": "1", "object_repr": "testyandex", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Secret key\"]}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2023-03-21T13:25:39.794Z", "user": 3, "content_type": 17, "object_id": "1", "object_repr": "testyandex", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Client id\"]}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2023-03-21T14:22:04.935Z", "user": 3, "content_type": 17, "object_id": "1", "object_repr": "Ya", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Name\", \"Client id\", \"Secret key\"]}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2023-03-21T14:47:11.992Z", "user": 3, "content_type": 17, "object_id": "1", "object_repr": "Ya", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Client id\", \"Secret key\", \"Sites\"]}}]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2023-03-21T15:03:31.761Z", "user": 3, "content_type": 17, "object_id": "1", "object_repr": "Ya", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Sites\"]}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2023-03-21T15:03:53.337Z", "user": 3, "content_type": 17, "object_id": "1", "object_repr": "Ya", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Sites\"]}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2023-03-21T15:06:44.193Z", "user": 3, "content_type": 12, "object_id": "2", "object_repr": "http://127.0.0.1:8000/news/", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2023-03-21T15:06:49.396Z", "user": 3, "content_type": 17, "object_id": "1", "object_repr": "Ya", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Sites\"]}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2023-03-21T15:09:13.017Z", "user": 3, "content_type": 12, "object_id": "3", "object_repr": "http://127.0.0.1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2023-03-21T15:09:15.689Z", "user": 3, "content_type": 17, "object_id": "1", "object_repr": "Ya", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Sites\"]}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2023-03-21T15:09:52.711Z", "user": 3, "content_type": 17, "object_id": "1", "object_repr": "Ya", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Sites\"]}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2023-03-21T15:31:39.668Z", "user": 3, "content_type": 12, "object_id": "3", "object_repr": "http://127.0.0.1", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2023-03-21T15:31:50.908Z", "user": 3, "content_type": 12, "object_id": "2", "object_repr": "http://127.0.0.1:8000/news/", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2023-03-21T15:32:14.046Z", "user": 3, "content_type": 12, "object_id": "1", "object_repr": "http://127.0.0.1", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Domain name\", \"Display name\"]}}]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2023-03-21T15:41:15.947Z", "user": 3, "content_type": 3, "object_id": "1", "object_repr": "authors", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2023-03-21T15:50:05.796Z", "user": 3, "content_type": 3, "object_id": "1", "object_repr": "authors", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Permissions\"]}}]"}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2023-03-21T15:52:09.071Z", "user": 3, "content_type": 4, "object_id": "1", "object_repr": "Andrey.K.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Groups\"]}}]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2023-03-21T15:52:17.740Z", "user": 3, "content_type": 4, "object_id": "2", "object_repr": "Vladimir.V.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Groups\"]}}]"}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2023-03-21T15:54:09.308Z", "user": 3, "content_type": 4, "object_id": "1", "object_repr": "Andrey.K.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"First name\", \"Last name\", \"Email address\"]}}]"}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2023-03-21T15:54:41.750Z", "user": 3, "content_type": 4, "object_id": "2", "object_repr": "Vladimir.V.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"First name\", \"Last name\", \"Email address\"]}}]"}}, {"model": "admin.logentry", "pk": 22, "fields": {"action_time": "2023-03-21T15:59:26.875Z", "user": 3, "content_type": 4, "object_id": "1", "object_repr": "Andrey.K.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"First name\", \"Last name\", \"Email address\"]}}]"}}, {"model": "admin.logentry", "pk": 23, "fields": {"action_time": "2023-03-21T15:59:38.611Z", "user": 3, "content_type": 4, "object_id": "2", "object_repr": "Vladimir.V.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Groups\"]}}]"}}, {"model": "admin.logentry", "pk": 24, "fields": {"action_time": "2023-03-21T16:00:31.384Z", "user": 3, "content_type": 4, "object_id": "1", "object_repr": "Andrey.K.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"password\"]}}]"}}, {"model": "admin.logentry", "pk": 25, "fields": {"action_time": "2023-03-21T16:00:50.576Z", "user": 3, "content_type": 4, "object_id": "1", "object_repr": "Andrey.K.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"First name\", \"Last name\", \"Email address\"]}}]"}}, {"model": "admin.logentry", "pk": 26, "fields": {"action_time": "2023-03-21T16:01:22.426Z", "user": 3, "content_type": 4, "object_id": "2", "object_repr": "Vladimir.V.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"password\"]}}]"}}, {"model": "admin.logentry", "pk": 27, "fields": {"action_time": "2023-03-21T16:01:29.940Z", "user": 3, "content_type": 4, "object_id": "2", "object_repr": "Vladimir.V.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Groups\"]}}]"}}, {"model": "admin.logentry", "pk": 28, "fields": {"action_time": "2023-03-21T16:05:55.376Z", "user": 3, "content_type": 4, "object_id": "4", "object_repr": "testuser", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"password\"]}}]"}}, {"model": "admin.logentry", "pk": 29, "fields": {"action_time": "2023-03-21T16:14:03.234Z", "user": 3, "content_type": 3, "object_id": "2", "object_repr": "common users", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 30, "fields": {"action_time": "2023-03-21T16:48:21.647Z", "user": 3, "content_type": 3, "object_id": "1", "object_repr": "authors", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Permissions\"]}}]"}}, {"model": "admin.logentry", "pk": 31, "fields": {"action_time": "2023-03-22T12:45:52.325Z", "user": 3, "content_type": 3, "object_id": "1", "object_repr": "authors", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 32, "fields": {"action_time": "2023-03-22T14:01:17.718Z", "user": 3, "content_type": 4, "object_id": "2", "object_repr": "Vladimir.V.", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 33, "fields": {"action_time": "2023-03-22T14:05:48.319Z", "user": 3, "content_type": 4, "object_id": "4", "object_repr": "testuser", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"password\"]}}]"}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2023-03-22T14:06:06.635Z", "user": 3, "content_type": 4, "object_id": "1", "object_repr": "Andrey.K.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"password\"]}}]"}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2023-03-22T14:06:23.296Z", "user": 3, "content_type": 4, "object_id": "2", "object_repr": "Vladimir.V.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"password\"]}}]"}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2023-03-22T14:06:41.358Z", "user": 3, "content_type": 4, "object_id": "4", "object_repr": "testuser", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"password\"]}}]"}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2023-03-22T14:08:47.369Z", "user": 3, "content_type": 4, "object_id": "4", "object_repr": "testuser", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Groups\"]}}]"}}, {"model": "admin.logentry", "pk": 38, "fields": {"action_time": "2023-03-22T14:11:26.832Z", "user": 3, "content_type": 4, "object_id": "4", "object_repr": "testuser", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Groups\"]}}]"}}, {"model": "admin.logentry", "pk": 39, "fields": {"action_time": "2023-03-22T14:12:41.217Z", "user": 3, "content_type": 4, "object_id": "3", "object_repr": "admin", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Email address\"]}}]"}}, {"model": "admin.logentry", "pk": 40, "fields": {"action_time": "2023-03-27T19:53:02.645Z", "user": 3, "content_type": 4, "object_id": "3", "object_repr": "admin", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Email address\"]}}]"}}, {"model": "admin.logentry", "pk": 41, "fields": {"action_time": "2023-03-27T19:53:31.868Z", "user": 3, "content_type": 4, "object_id": "5", "object_repr": "Zela52", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 42, "fields": {"action_time": "2023-03-27T20:18:47.037Z", "user": 3, "content_type": 4, "object_id": "7", "object_repr": "Zela52", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 43, "fields": {"action_time": "2023-04-03T20:55:43.115Z", "user": 3, "content_type": 4, "object_id": "17", "object_repr": "test8", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 44, "fields": {"action_time": "2023-04-03T20:55:49.265Z", "user": 3, "content_type": 4, "object_id": "16", "object_repr": "test70", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 45, "fields": {"action_time": "2023-04-03T20:55:55.168Z", "user": 3, "content_type": 4, "object_id": "15", "object_repr": "test7", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 46, "fields": {"action_time": "2023-04-03T20:56:00.527Z", "user": 3, "content_type": 4, "object_id": "14", "object_repr": "test6", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 47, "fields": {"action_time": "2023-04-03T20:56:05.486Z", "user": 3, "content_type": 4, "object_id": "13", "object_repr": "test5", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 48, "fields": {"action_time": "2023-04-03T20:56:10.543Z", "user": 3, "content_type": 4, "object_id": "12", "object_repr": "test4", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 49, "fields": {"action_time": "2023-04-03T20:56:15.262Z", "user": 3, "content_type": 4, "object_id": "10", "object_repr": "test2", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 50, "fields": {"action_time": "2023-04-03T20:56:26.367Z", "user": 3, "content_type": 4, "object_id": "11", "object_repr": "test3", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 51, "fields": {"action_time": "2023-04-11T15:52:11.625Z", "user": 3, "content_type": 9, "object_id": "2", "object_repr": "COMPUTER GAMES", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Text\"]}}]"}}, {"model": "admin.logentry", "pk": 52, "fields": {"action_time": "2023-04-11T15:53:15.539Z", "user": 3, "content_type": 9, "object_id": "2", "object_repr": "COMPUTER GAMES", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Text\"]}}]"}}, {"model": "admin.logentry", "pk": 53, "fields": {"action_time": "2023-04-11T15:53:52.687Z", "user": 3, "content_type": 9, "object_id": "2", "object_repr": "COMPUTER GAMES", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Text\"]}}]"}}, {"model": "admin.logentry", "pk": 54, "fields": {"action_time": "2023-04-11T15:54:53.202Z", "user": 3, "content_type": 9, "object_id": "2", "object_repr": "COMPUTER GAMES", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Text\"]}}]"}}, {"model": "admin.logentry", "pk": 55, "fields": {"action_time": "2023-04-11T15:56:56.280Z", "user": 3, "content_type": 9, "object_id": "2", "object_repr": "COMPUTER GAMES", "action_flag": 2, "change_message": "[]"}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view log entry", "content_type": 1, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view permission", "content_type": 2, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view group", "content_type": 3, "codename": "view_group"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add user", "content_type": 4, "codename": "add_user"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change user", "content_type": 4, "codename": "change_user"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete user", "content_type": 4, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view user", "content_type": 4, "codename": "view_user"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add content type", "content_type": 5, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change content type", "content_type": 5, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete content type", "content_type": 5, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view content type", "content_type": 5, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add session", "content_type": 6, "codename": "add_session"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change session", "content_type": 6, "codename": "change_session"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete session", "content_type": 6, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view session", "content_type": 6, "codename": "view_session"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add author", "content_type": 7, "codename": "add_author"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change author", "content_type": 7, "codename": "change_author"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete author", "content_type": 7, "codename": "delete_author"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view author", "content_type": 7, "codename": "view_author"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add category", "content_type": 8, "codename": "add_category"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change category", "content_type": 8, "codename": "change_category"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete category", "content_type": 8, "codename": "delete_category"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view category", "content_type": 8, "codename": "view_category"}}, {"model": "auth.permission", "pk": 33, "fields": {"name": "Can add post", "content_type": 9, "codename": "add_post"}}, {"model": "auth.permission", "pk": 34, "fields": {"name": "Can change post", "content_type": 9, "codename": "change_post"}}, {"model": "auth.permission", "pk": 35, "fields": {"name": "Can delete post", "content_type": 9, "codename": "delete_post"}}, {"model": "auth.permission", "pk": 36, "fields": {"name": "Can view post", "content_type": 9, "codename": "view_post"}}, {"model": "auth.permission", "pk": 37, "fields": {"name": "Can add post category", "content_type": 10, "codename": "add_postcategory"}}, {"model": "auth.permission", "pk": 38, "fields": {"name": "Can change post category", "content_type": 10, "codename": "change_postcategory"}}, {"model": "auth.permission", "pk": 39, "fields": {"name": "Can delete post category", "content_type": 10, "codename": "delete_postcategory"}}, {"model": "auth.permission", "pk": 40, "fields": {"name": "Can view post category", "content_type": 10, "codename": "view_postcategory"}}, {"model": "auth.permission", "pk": 41, "fields": {"name": "Can add comment", "content_type": 11, "codename": "add_comment"}}, {"model": "auth.permission", "pk": 42, "fields": {"name": "Can change comment", "content_type": 11, "codename": "change_comment"}}, {"model": "auth.permission", "pk": 43, "fields": {"name": "Can delete comment", "content_type": 11, "codename": "delete_comment"}}, {"model": "auth.permission", "pk": 44, "fields": {"name": "Can view comment", "content_type": 11, "codename": "view_comment"}}, {"model": "auth.permission", "pk": 45, "fields": {"name": "Can add site", "content_type": 12, "codename": "add_site"}}, {"model": "auth.permission", "pk": 46, "fields": {"name": "Can change site", "content_type": 12, "codename": "change_site"}}, {"model": "auth.permission", "pk": 47, "fields": {"name": "Can delete site", "content_type": 12, "codename": "delete_site"}}, {"model": "auth.permission", "pk": 48, "fields": {"name": "Can view site", "content_type": 12, "codename": "view_site"}}, {"model": "auth.permission", "pk": 49, "fields": {"name": "Can add flat page", "content_type": 13, "codename": "add_flatpage"}}, {"model": "auth.permission", "pk": 50, "fields": {"name": "Can change flat page", "content_type": 13, "codename": "change_flatpage"}}, {"model": "auth.permission", "pk": 51, "fields": {"name": "Can delete flat page", "content_type": 13, "codename": "delete_flatpage"}}, {"model": "auth.permission", "pk": 52, "fields": {"name": "Can view flat page", "content_type": 13, "codename": "view_flatpage"}}, {"model": "auth.permission", "pk": 53, "fields": {"name": "Can add email address", "content_type": 14, "codename": "add_emailaddress"}}, {"model": "auth.permission", "pk": 54, "fields": {"name": "Can change email address", "content_type": 14, "codename": "change_emailaddress"}}, {"model": "auth.permission", "pk": 55, "fields": {"name": "Can delete email address", "content_type": 14, "codename": "delete_emailaddress"}}, {"model": "auth.permission", "pk": 56, "fields": {"name": "Can view email address", "content_type": 14, "codename": "view_emailaddress"}}, {"model": "auth.permission", "pk": 57, "fields": {"name": "Can add email confirmation", "content_type": 15, "codename": "add_emailconfirmation"}}, {"model": "auth.permission", "pk": 58, "fields": {"name": "Can change email confirmation", "content_type": 15, "codename": "change_emailconfirmation"}}, {"model": "auth.permission", "pk": 59, "fields": {"name": "Can delete email confirmation", "content_type": 15, "codename": "delete_emailconfirmation"}}, {"model": "auth.permission", "pk": 60, "fields": {"name": "Can view email confirmation", "content_type": 15, "codename": "view_emailconfirmation"}}, {"model": "auth.permission", "pk": 61, "fields": {"name": "Can add social account", "content_type": 16, "codename": "add_socialaccount"}}, {"model": "auth.permission", "pk": 62, "fields": {"name": "Can change social account", "content_type": 16, "codename": "change_socialaccount"}}, {"model": "auth.permission", "pk": 63, "fields": {"name": "Can delete social account", "content_type": 16, "codename": "delete_socialaccount"}}, {"model": "auth.permission", "pk": 64, "fields": {"name": "Can view social account", "content_type": 16, "codename": "view_socialaccount"}}, {"model": "auth.permission", "pk": 65, "fields": {"name": "Can add social application", "content_type": 17, "codename": "add_socialapp"}}, {"model": "auth.permission", "pk": 66, "fields": {"name": "Can change social application", "content_type": 17, "codename": "change_socialapp"}}, {"model": "auth.permission", "pk": 67, "fields": {"name": "Can delete social application", "content_type": 17, "codename": "delete_socialapp"}}, {"model": "auth.permission", "pk": 68, "fields": {"name": "Can view social application", "content_type": 17, "codename": "view_socialapp"}}, {"model": "auth.permission", "pk": 69, "fields": {"name": "Can add social application token", "content_type": 18, "codename": "add_socialtoken"}}, {"model": "auth.permission", "pk": 70, "fields": {"name": "Can change social application token", "content_type": 18, "codename": "change_socialtoken"}}, {"model": "auth.permission", "pk": 71, "fields": {"name": "Can delete social application token", "content_type": 18, "codename": "delete_socialtoken"}}, {"model": "auth.permission", "pk": 72, "fields": {"name": "Can view social application token", "content_type": 18, "codename": "view_socialtoken"}}, {"model": "auth.permission", "pk": 73, "fields": {"name": "Can add subscription", "content_type": 19, "codename": "add_subscription"}}, {"model": "auth.permission", "pk": 74, "fields": {"name": "Can change subscription", "content_type": 19, "codename": "change_subscription"}}, {"model": "auth.permission", "pk": 75, "fields": {"name": "Can delete subscription", "content_type": 19, "codename": "delete_subscription"}}, {"model": "auth.permission", "pk": 76, "fields": {"name": "Can view subscription", "content_type": 19, "codename": "view_subscription"}}, {"model": "auth.permission", "pk": 77, "fields": {"name": "Can add category list view", "content_type": 20, "codename": "add_categorylistview"}}, {"model": "auth.permission", "pk": 78, "fields": {"name": "Can change category list view", "content_type": 20, "codename": "change_categorylistview"}}, {"model": "auth.permission", "pk": 79, "fields": {"name": "Can delete category list view", "content_type": 20, "codename": "delete_categorylistview"}}, {"model": "auth.permission", "pk": 80, "fields": {"name": "Can view category list view", "content_type": 20, "codename": "view_categorylistview"}}, {"model": "auth.permission", "pk": 81, "fields": {"name": "Can add django job", "content_type": 21, "codename": "add_djangojob"}}, {"model": "auth.permission", "pk": 82, "fields": {"name": "Can change django job", "content_type": 21, "codename": "change_djangojob"}}, {"model": "auth.permission", "pk": 83, "fields": {"name": "Can delete django job", "content_type": 21, "codename": "delete_djangojob"}}, {"model": "auth.permission", "pk": 84, "fields": {"name": "Can view django job", "content_type": 21, "codename": "view_djangojob"}}, {"model": "auth.permission", "pk": 85, "fields": {"name": "Can add django job execution", "content_type": 22, "codename": "add_djangojobexecution"}}, {"model": "auth.permission", "pk": 86, "fields": {"name": "Can change django job execution", "content_type": 22, "codename": "change_djangojobexecution"}}, {"model": "auth.permission", "pk": 87, "fields": {"name": "Can delete django job execution", "content_type": 22, "codename": "delete_djangojobexecution"}}, {"model": "auth.permission", "pk": 88, "fields": {"name": "Can view django job execution", "content_type": 22, "codename": "view_djangojobexecution"}}, {"model": "auth.permission", "pk": 89, "fields": {"name": "Can add subscriber", "content_type": 19, "codename": "add_subscriber"}}, {"model": "auth.permission", "pk": 90, "fields": {"name": "Can change subscriber", "content_type": 19, "codename": "change_subscriber"}}, {"model": "auth.permission", "pk": 91, "fields": {"name": "Can delete subscriber", "content_type": 19, "codename": "delete_subscriber"}}, {"model": "auth.permission", "pk": 92, "fields": {"name": "Can view subscriber", "content_type": 19, "codename": "view_subscriber"}}, {"model": "auth.group", "pk": 1, "fields": {"name": "authors", "permissions": [25, 26, 29, 30, 33, 34, 36, 37, 38, 40]}}, {"model": "auth.group", "pk": 2, "fields": {"name": "common users", "permissions": []}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$390000$a10hkiO1DRomwskdOGgaVk$6Vkr0NGjSHgjRCAMDx9R4cDVKDAYuiPuVvwssYckpIw=", "last_login": "2023-03-26T11:42:05.488Z", "is_superuser": false, "username": "Andrey.K.", "first_name": "Andrey.K.", "last_name": "Andrey.K.", "email": "Vladimir@mail.com", "is_staff": false, "is_active": true, "date_joined": "2023-03-03T13:01:17Z", "groups": [1], "user_permissions": []}}, {"model": "auth.user", "pk": 2, "fields": {"password": "pbkdf2_sha256$390000$nIxZtYAK0heLFqgdrfzKjO$Q31sj5VQwH+fwriF+oQg6xlpm1wHS0GWDKOTusAFVuA=", "last_login": null, "is_superuser": false, "username": "Vladimir.V.", "first_name": "Vladimir.V.", "last_name": "Vladimir.V.", "email": "Vladimir@mail.com", "is_staff": false, "is_active": true, "date_joined": "2023-03-03T13:02:42Z", "groups": [1], "user_permissions": []}}, {"model": "auth.user", "pk": 3, "fields": {"password": "pbkdf2_sha256$390000$SjC6llxKMf2vPefvUJWFXv$T78ygxy2E1bqxp4WJ/NRIXn8uGRG69XvlU/S2FmXNxE=", "last_login": "2023-04-26T17:12:09.570Z", "is_superuser": true, "username": "admin", "first_name": "", "last_name": "", "email": "Zel_726@mail.ru", "is_staff": true, "is_active": true, "date_joined": "2023-03-09T13:02:19Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 4, "fields": {"password": "pbkdf2_sha256$390000$kIH6bwuNWicD7rTf4c2755$207TgLEd/78vGc5Lz1/7a6+ttfD1I4YffDTg6MiWxXs=", "last_login": "2023-03-26T11:41:28.269Z", "is_superuser": false, "username": "testuser", "first_name": "Test", "last_name": "Testoff", "email": "test@test.com", "is_staff": false, "is_active": true, "date_joined": "2023-03-20T19:48:21Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 6, "fields": {"password": "pbkdf2_sha256$390000$htD5RpmYmI31zSzAtAUAl6$yyMlVQCHKQXCR+2y6KvY365BmzcmwYTXtYef+//3x9k=", "last_login": "2023-04-03T19:53:52.915Z", "is_superuser": false, "username": "test1", "first_name": "", "last_name": "", "email": "test1@mail.ru", "is_staff": false, "is_active": true, "date_joined": "2023-03-27T20:08:04.290Z", "groups": [2], "user_permissions": []}}, {"model": "auth.user", "pk": 8, "fields": {"password": "!EJjKEicT4Q5B723LDULdnnBGlEPUBpGTri1PB6yQ", "last_login": "2023-03-27T20:20:12.850Z", "is_superuser": false, "username": "Zela52", "first_name": "Михаил", "last_name": "Зеленков", "email": "Zela52@yandex.ru", "is_staff": false, "is_active": true, "date_joined": "2023-03-27T20:20:12.815Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 9, "fields": {"password": "pbkdf2_sha256$390000$1dycBQTMSSAG1DYPSBikrU$1ljwyOI1t8vyBWNRcxNLUbnPsqA+WIeQ4qca1N/aqOQ=", "last_login": null, "is_superuser": false, "username": "zelenkov.maik", "first_name": "", "last_name": "", "email": "zelenkov.maik@yandex.ru", "is_staff": false, "is_active": true, "date_joined": "2023-03-27T20:23:04.652Z", "groups": [2], "user_permissions": []}}, {"model": "auth.user", "pk": 18, "fields": {"password": "pbkdf2_sha256$390000$g8TwWShft4RxuSxQDCXidz$hLGfPDU9f65h6aHpJsmxOjcX7VEoyRcL3wA0PRpgKDg=", "last_login": null, "is_superuser": false, "username": "test2", "first_name": "", "last_name": "", "email": "test2@mail.ru", "is_staff": false, "is_active": true, "date_joined": "2023-04-03T20:57:12.636Z", "groups": [2], "user_permissions": []}}, {"model": "auth.user", "pk": 19, "fields": {"password": "pbkdf2_sha256$390000$Hqa1eoyERLIO6kqbAUEcRY$XT5iDJ31BgJ9Aeq4mtwmr/p/PMAE4fwW7pvQA3tvTi0=", "last_login": "2023-04-03T21:00:54.693Z", "is_superuser": false, "username": "test30", "first_name": "", "last_name": "", "email": "test30@mail.ru", "is_staff": false, "is_active": true, "date_joined": "2023-04-03T20:59:01.575Z", "groups": [2], "user_permissions": []}}, {"model": "sessions.session", "pk": "09lfc8fgc91ushfasuho7mf63bgyxum5", "fields": {"session_data": "eyJfc2Vzc2lvbl9leHBpcnkiOjB9:1pivBY:lxglnE2tg9WgerrKLgC3nIS7WIDHSl3y_do3vfPn4GE", "expire_date": "2023-04-16T10:43:44.496Z"}}, {"model": "sessions.session", "pk": "1dnwu6g9y85syti4qkegyjusk59mtaph", "fields": {"session_data": ".eJxVjcsOwiAQRf-FtWn6oFPsTn-EXAZIiQ01hSYa479bTBe6m_uYc19CY8uT3pJbdbBiFFKcfj0DvrlYAsxzsSswL1vM1bdzxKm67MrFHBg5LPF6fP2hJqSpcKColcQGvgEsYT9wtkPdOA82lkn25FqpqFdEaFXXdaDGG-r7geELNLmU9hntHvewPsVYvz8LbUSa:1pezON:GxjAWMVdB-3wJzGwswMWBL5jq9T1WxJWdfyX3AsrX3Y", "expire_date": "2023-04-05T14:24:43.125Z"}}, {"model": "sessions.session", "pk": "57jnae9mf4znehqshtv8yx0v1f9rglph", "fields": {"session_data": ".eJxVjcsOgjAQRf-la0NwCn2w0x9pptNpaCTF0JJojP8uGBa6vK9zX8LhWke3Fl5cCmIQZ3H69TzSjfMe4DTtdoNE85pr8-0ccWkum-JcE2FNc74eqz_UiGXcOIYMWx0VWAZtZQuxD7IzJIkDQLQWtVdsvQ-gJKooe60iguQO0QTT7tDCpWw3jh_3tDzF0L4_wn1D0w:1pefAQ:r0SO3mrqpZyYOCkkfS3if35ZcNd61DXKS0jXYqIair8", "expire_date": "2023-04-04T16:48:58.190Z"}}, {"model": "sessions.session", "pk": "96w4o16lyixjon9fgsmcmwt828yy14e0", "fields": {"session_data": ".eJxVjU0OwiAQhe_C2jQUSqd0pxchwzCkxIYaoYnGeHdb04Uu39_3XsLhWie3Fr67FMQoWitOv6ZHunLeE5zn3W6QaFlzbb6dIy7NeVOcayKsacmXY_WHmrBMG4e6wQwYGcCAVsb73ioPQcfeS913ZK3lqEEidSEQRQU6SAimlUYhGLVDC5ey3Th-3NL9KUb5_gDlokOZ:1pjRIM:cEg6BGCu_OaJTwmpqzx4I3cqepFI4ePWo5KrfNsl1RM", "expire_date": "2023-04-17T21:00:54.700Z"}}, {"model": "sessions.session", "pk": "99cv53s2ojcy5gm34u1y9u6wzbx7oszu", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-rT-U9JzBWtsbHECOFCcV4u5gKQW0b-bNi0Xctxr3TmucCzszzU6_W8L8oDZAuWO7LTwvbVvnxIfCD9r5dSn0vBzuX6BiryPrrdC2mAmkQqFClt6ohABmsgKTM8VRyDpQlsoRgvOgLWkZwNryfbD3B7z6NuQ:1paeKv:OLxOgoDwFbewJEzvbdIfMMz9bIUQfc6-bCQcDmwrX-A", "expire_date": "2023-03-24T15:07:13.857Z"}}, {"model": "sessions.session", "pk": "czo52hjkv5hl6g68zlcg4vz5k8fuqsc8", "fields": {"session_data": ".eJxVjcsKwjAQRf8laymJfaY7_ZEwM5mhwZJKk4Ii_rupdKHL-zr3pRxseXJb4tUFr0Zl1OnXQ6Abxz2Aed7tCoiWLebq2zniVF2K4pgDQQ5LvB6rP9QEaSqc2hMOglqgQcsEhpHRi4DVvml9p4XrATpp6dzTYL3mjsT0TW_qFq21OzRxSuXG8eMe1qca9fsDM0dFEg:1pgOlB:G67kV2zvlyH5mnHV4wH94Ta41Zus-Pyv8uMFvsXXo3Y", "expire_date": "2023-04-09T11:42:05.496Z"}}, {"model": "sessions.session", "pk": "jigr0lcit5fj1kl9jpsqvojvp2iopegm", "fields": {"session_data": ".eJxVjdsOgjAMQP9lz4QAk1140x9Zuq6TxTkMA6Mx_rtAiAmPPac9_TBAHOY0mSeNwQdyhu4QIuvSHGPxt3OmkXXsygpmYJ76DZjgFlaLI7SAN0qrgRhXXO6RctvZdS7Py0RpCghTGNJlvzqkesj90ml4rRq0VrbeaeJOe67FSbXSAXfWiwpbK4TVrecNoiTZKJBKaUKFQlK1RjPlvLwx9HqE8c266vsD1iBV2Q:1pjBsl:9yNpqByOF0nwp0WPap3mtsRVq-kAAZv2pQcezm6i1GE", "expire_date": "2023-04-17T04:33:27.669Z"}}, {"model": "sessions.session", "pk": "l5660ufa49l4k3qpf4onz28ormw5etuo", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-rT-U9JzBWtsbHECOFCcV4u5gKQW0b-bNi0Xctxr3TmucCzszzU6_W8L8oDZAuWO7LTwvbVvnxIfCD9r5dSn0vBzuX6BiryPrrdC2mAmkQqFClt6ohABmsgKTM8VRyDpQlsoRgvOgLWkZwNryfbD3B7z6NuQ:1paGp9:jrEOz_OEqUm2-S2X5sGvwfQWJmwj_KzoP86ogPPJ4xg", "expire_date": "2023-03-23T14:00:51.242Z"}}, {"model": "sessions.session", "pk": "ofo5hzfpabgojxx6qww30j9zzf69c0ch", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-rT-U9JzBWtsbHECOFCcV4u5gKQW0b-bNi0Xctxr3TmucCzszzU6_W8L8oDZAuWO7LTwvbVvnxIfCD9r5dSn0vBzuX6BiryPrrdC2mAmkQqFClt6ohABmsgKTM8VRyDpQlsoRgvOgLWkZwNryfbD3B7z6NuQ:1plvZ9:jlXhZYeqcCuzlHqV6F4jo8PRVNrDBJHun9_zmkSLAG0", "expire_date": "2023-04-24T17:44:31.601Z"}}, {"model": "sessions.session", "pk": "p40r7adpyywp5ele3yj95l6b4qkl2ek5", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-rT-U9JzBWtsbHECOFCcV4u5gKQW0b-bNi0Xctxr3TmucCzszzU6_W8L8oDZAuWO7LTwvbVvnxIfCD9r5dSn0vBzuX6BiryPrrdC2mAmkQqFClt6ohABmsgKTM8VRyDpQlsoRgvOgLWkZwNryfbD3B7z6NuQ:1pmGHZ:AjhUwMpdzGOjII9M_61ur63NkT1yoMS8mWPsrL6QoBc", "expire_date": "2023-04-25T15:51:45.238Z"}}, {"model": "sessions.session", "pk": "rbw5qnemr4dokdbe528ihunzbt1mskfx", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-rT-U9JzBWtsbHECOFCcV4u5gKQW0b-bNi0Xctxr3TmucCzszzU6_W8L8oDZAuWO7LTwvbVvnxIfCD9r5dSn0vBzuX6BiryPrrdC2mAmkQqFClt6ohABmsgKTM8VRyDpQlsoRgvOgLWkZwNryfbD3B7z6NuQ:1paLaR:PdpwZJwI1XD75yyFYDgvJfRHK1nWa0h8nvJtEMsr0oY", "expire_date": "2023-03-23T19:05:59.186Z"}}, {"model": "sessions.session", "pk": "rzstm3jn5p885b3xukmhkk2w333je46x", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-rT-U9JzBWtsbHECOFCcV4u5gKQW0b-bNi0Xctxr3TmucCzszzU6_W8L8oDZAuWO7LTwvbVvnxIfCD9r5dSn0vBzuX6BiryPrrdC2mAmkQqFClt6ohABmsgKTM8VRyDpQlsoRgvOgLWkZwNryfbD3B7z6NuQ:1pjRlS:GUQp2V_x_HxsLLni6SGc4OPogJBNqZTJSu953IB87aw", "expire_date": "2023-04-17T21:30:58.902Z"}}, {"model": "sessions.session", "pk": "ulxcfz5s1upx1nyd9wh6bgqskpq69esg", "fields": {"session_data": ".eJxVjVEOwiAMQO_C97KAMJn704uQFkpGRDQDjMZ4d7dlMdln32tfPwysvddUzJOm4AM5QzcIkQ2pxtj8bc00sYEha5iBWsYVmOBmJsQeItgrpcVAjAtut0i77mw6t-d5olSChRLu6bJd7VIj5HHukAftEJU69txK6Bwo8EpwK4DQOk68Q6G9lFqg7BDBa987pw-C9ycU_RLNlPP8xtDrEaY3G_j3BwbEVnU:1pgthv:lQ9wW6TYTaJ7HAVpJ4c7K5jQFWAXeStBs9NgQNJ4FlY", "expire_date": "2023-04-10T20:44:47.979Z"}}, {"model": "sessions.session", "pk": "x6nc4tonyf5px0jffew0bmsuaumvi22e", "fields": {"session_data": ".eJxVjUsOgyAQhu_CujED4qDu2osQYKaR1GAjmLRpevdi48bl__w-wmbOOS7J8usZ17cY4SKs28pkt8yrjSRGgeLkeRcenPbAzfNuNy6EZUul-XeOODfXqjiVGFypgNuxOl1NLk_1R_UdIZiWiTF4ZVTQGojBSARpPBlSpNh70l0Lchhkb-6IhBUFbad78f0BIsVDHw:1pjLFq:cIURMiXF8f2pB-f4whp672sqITSqqLgdBrI2U8fXDso", "expire_date": "2023-04-17T14:33:54.272Z"}}, {"model": "sessions.session", "pk": "yo7t0u8co1b0e3i3hesr0cioon2gz5bp", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-rT-U9JzBWtsbHECOFCcV4u5gKQW0b-bNi0Xctxr3TmucCzszzU6_W8L8oDZAuWO7LTwvbVvnxIfCD9r5dSn0vBzuX6BiryPrrdC2mAmkQqFClt6ohABmsgKTM8VRyDpQlsoRgvOgLWkZwNryfbD3B7z6NuQ:1paG1Q:hpVw_S8rYRp_8-r8HFzQNI3QfvNsGg0bPvvzre03sV0", "expire_date": "2023-03-23T13:09:28.330Z"}}, {"model": "sessions.session", "pk": "yqdsaoninf8uc6tbt3kku5dkp1re7zc6", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-rT-U9JzBWtsbHECOFCcV4u5gKQW0b-bNi0Xctxr3TmucCzszzU6_W8L8oDZAuWO7LTwvbVvnxIfCD9r5dSn0vBzuX6BiryPrrdC2mAmkQqFClt6ohABmsgKTM8VRyDpQlsoRgvOgLWkZwNryfbD3B7z6NuQ:1prigb:XE2O8b88CpjYQqLVRVec-QkVbE2bAirv1wcqPjeR_Po", "expire_date": "2023-05-10T17:12:09.576Z"}}, {"model": "news.author", "pk": 1, "fields": {"authorUser": 1, "ratingAuthor": 7}}, {"model": "news.author", "pk": 2, "fields": {"authorUser": 2, "ratingAuthor": 27}}, {"model": "news.category", "pk": 1, "fields": {"name": "IT", "subscribers": [3]}}, {"model": "news.category", "pk": 2, "fields": {"name": "Internet", "subscribers": [3]}}, {"model": "news.category", "pk": 3, "fields": {"name": "Science and technology‎", "subscribers": [3, 6, 19]}}, {"model": "news.category", "pk": 4, "fields": {"name": "Ratings", "subscribers": [3, 6]}}, {"model": "news.post", "pk": 1, "fields": {"author": 1, "categoryType": "NW", "dateCreation": "2023-03-03T13:29:54.152Z", "title": "games for everyone", "text": "Many children start playing computer games at the age of 4 or 5.", "rating": 3}}, {"model": "news.post", "pk": 2, "fields": {"author": 2, "categoryType": "AR", "dateCreation": "2023-03-03T13:31:58.496Z", "title": "COMPUTER GAMES", "text": "Some years ago computer games were quite simple and rare and the scientific research concluded that they stimulated good results at school and at work.", "rating": 6}}, {"model": "news.post", "pk": 4, "fields": {"author": 1, "categoryType": "AR", "dateCreation": "2023-03-14T21:07:44.191Z", "title": "OpenAI unveils GPT-4", "text": "Artificial intelligence (AI) research firm OpenAI today revealed the latest version of its computer program for natural language processing that powers ChatGPT, the wildly hyped chatbot with a fast-growing user base.  ChatGPT creator OpenAI announced the new large language model in a blog post, saying it will have better features than its predecessor, GPT-3.5 Word of GPT-4 first leaked last week when Andreas Braun, CTO of Microsoft Germany, let slip that it would be launched this week.  The new GPT-4 large language model will be different from previous versions, offering what the company called a “multimodal system” that can process not just text, but images, video, or audio.   [ Related: How AI is helping the help desk ]", "rating": 0}}, {"model": "news.post", "pk": 5, "fields": {"author": 2, "categoryType": "NW", "dateCreation": "2023-03-14T21:09:40.338Z", "title": "US-China chip war to hit affiliates of server maker Inspur", "text": "In a move that highlights how the ongoing US-China chip war is disrupting the global semiconductor supply chain, the US is taking measures to address a gap in restrictions imposed on Chinese server maker Inspur Group that leaves US companies free to continue supplying Inspur’s affiliates, of which there are dozens, according to a report by Bloomberg.  Inspur sells servers targeted at AI and big data workloads, and does business worldwide, including in the US, Europe, the Middle East, Latin America, and Asia-Pacific.  Earlier this month, the Biden administration added 37 more entities, including Inspur, to a trade blocklist. The blocklist includes companies to which US semiconductor makers and manufacturers of chip-making equipments may not sell products without special licenses.  [ Get regularly scheduled insights by signing up for Network World newsletters. ]  The companies were added to the blocklist for, “among other activities, contributing to Russia’s military and/or defense industrial base, supporting PRC military modernization, and facilitating or engaging in human rights abuses in Burma and in the People’s Republic of China (PRC),” the US Department of Commerce said in a statement.  The Biden administration, including officials at the Commerce Department, is aware that the chip blocklist does not specifically cover Inspur affiliates and is working to close the gap, but that may take several weeks, according to the Bloomberg report. Until then companies including Intel, Nvidia, and Cisco, among others, are free to trade with Inspur without the need for a license.", "rating": 0}}, {"model": "news.post", "pk": 6, "fields": {"author": 2, "categoryType": "NW", "dateCreation": "2023-03-15T13:18:28.140Z", "title": "ChatGPT now chatting via Azure OpenAI Service", "text": "Microsoft is making the ChatGPT AI large language model available in preview as a component for applications designed for the company’s Azure OpenAI Service, paving the way for developers to integrate the large language model into a host of different enterprise development and end-user applications.  Microsoft appears to have had several users working with this integration already, listing ODP Corporation (the parent company of Office Depot and OfficeMax), Singapore’s Smart Nation Digital Government Office, and contract management software provider Icertis as reference customers.  Developers using the Azure OpenAI Service can use ChatGPT to add a variety of features to applications, like recapping call center conversations, automating claims processing, and even creating new advertisements with personalized content, among other things.  [ Also on InfoWorld: How to choose a cloud machine learning platform ] Generative AI like ChatGPT is already being used to enhance Microsoft’s product offerings, as well. For instance, according to the company, the premium version of Teams can use AI to create chapters in conversations and automatically generated recaps, while Viva Sales can offer data-driven guidance and suggest email content to help teams reach their customers.  Enterprise use cases for Azure OpenAI ChatGPT Ritu Jyoti, IDC group vice president for worldwide AI and automation research, said that the proposed use cases make a lot of sense, and that she expects much of the initial usage of Microsoft’s new ChatGPT-powered offering to be internally focused within enterprises.  “For [example], helping HR put together job descriptions, helping employees with internal knowledge management and discovery — in other words, augmenting employees with internal search,” she said.  The pricing of the service works by tokens - one token covers about four characters’ worth of a given query in written English, with the average paragraph clocking in at 100 tokens, and a 1,500 word essay at about 2,048. According to Jyoti, one reason GPT-3-based applications became more popular just before ChatGPT went viral is that the pricing from the OpenAI foundation dropped to about $0.02 for 1,000 tokens.  ChatGPT via Azure costs even less, at $0.002 per 1,000 tokens, making the service potentially more economical than using an in-house large language model, she added.  “I think the pricing is great,” Jyoti said.  Microsoft appears to be operating the service with an emphasis on responsible AI practices, according to Gartner vice president and distinguished analyst Bern Elliot -– perhaps having learned lessons from incidents where a chatbot front end to Bing displayed strange behavior, including a conversation with a New York Times reporter in which the chatbot declared its love and treid to convince him to leave his spouse.  “I think Microsoft, historically, has taken responsible AI very seriously, and that’s to their credit,” he said. “Having a strong track record for ethical use and for delivering enterprise-grade privacy is positive, so I think that’s in their favor.”  That’s a key consideration, he said, given the concerns raised by AI use in the enterprise — data protection and contextualization of data sets, more specifically. The latter issue generally centers on making sure that enterprise AI are pulling answers from the right base of information, which ensures that those answers are correct and eliminates the “hallucinations” seen in more general-use AI.", "rating": 0}}, {"model": "news.post", "pk": 7, "fields": {"author": 1, "categoryType": "AR", "dateCreation": "2023-03-15T13:19:34.209Z", "title": "How AI can help find new employees", "text": "Before employing artificial intelligence (AI) to find job candidates, Southwest Airlines had no definitive way to track the success of the company's email and website hiring campaigns. The airline also couldn’t queue up potential applicants who’d logged into a job listings page and left before an applicable position had been posted.  Since it began using an AI-enabled hiring platform from tech firm Phenom, the airline now has “a warm pipeline of candidates” it can draw on whenever jobs opportunities arise, according to Kelby Tansey, manager for recruitment marketing at Southwest Airlines.  Tansey said the airline can now reach out to “passive” job candidates who came to Southwest but couldn’t find an open position at the time.  [ Keep up on the latest thought leadership, insights, how-to, and analysis on IT through Computerworld’s newsletters. ] “We’ll drive them into certain pipelines within the Phenom platform so we can capture their resume, their skills, and note some of those candidates and then let them know when the job opens up,” Tansey said.  Southwest is among a growing number of organizations turning to AI-based tools to identify potential job candidates, schedule interviews, and reduce the overall time recruiters and hiring managers spend on those tasks.  From 35% to 45% of companies are expected to use AI-based talent acquisition software and services to help select and interview job prospects this year, according to recent studies.", "rating": 0}}, {"model": "news.post", "pk": 8, "fields": {"author": 1, "categoryType": "NW", "dateCreation": "2023-03-15T13:21:14.876Z", "title": "A growing number of AI-based options", "text": "Along with Phenom's SaaS-based Intelligent Talent Experience platform, other leading providers of AI-based talent acquisition software and services include Eightfold, Beamery, and Seekout — all of which perform skills inference and candidate-job matching. Other notable vendors include Clovers (with its recent acquisition of Talvista), HireVue, Pymetrics (recently acquired by Harver), and iCIMS, according to Forrester Research.  AI-based recruitment platforms can find \"more diverse talent pools, and [offer] a more accurate approach to qualifying candidates by matching skills rather than on a job title match or other signal,” said Forrester Principal Analyst Betsy Summers.  Some of the use cases for talent acquisition platforms are efficiency-oriented, since  they’re used for interview scheduling, managing the candidate application process, assisting recruiters with follow-ups, and managing the applicant pipeline. Other platforms also focus on bias mitigation such as adjusting language in job descriptions and candidate communications to be more inclusive. Still others include remote video capabilities that automate early interviews.HireVue’s candidate interviewing software, for example, uses a natural language bot to conduct an interview and provide a transcript for hiring managers and recruiters. It also has a video component that records an interview, offering each would-be hire 30 seconds to prepare for each question, and up to three minutes to answer. The video is then sent to the hiring manager to view.  Talent acquisition software also often relies on “fits scoring,” which uses specific metrics to match a job candidate’s qualifications to a specific opening.  Saving time at SASR Worforce Solutions Bradley Cooper, director of IT at staffing firm SASR Workforce Solutions, said each recruiter in his company is responsible for hiring at least 360 people annually for various clients. In October 2021, SASR went live with Phenom’s platform, which  immediately provided efficiencies — among them, automatically matching candidates to job openings before a recruiter even contacted an applicant.  “When you work at our volume, you need tools to help get the candidates to you in a timely manner,” Cooper said. “As soon as a job opportunity is available, we can make it known to the candidate, and that goes out to the job board Phenom has. Before that, it just wasn’t a good recruiter or candidate experience.”", "rating": 0}}, {"model": "news.post", "pk": 9, "fields": {"author": 2, "categoryType": "AR", "dateCreation": "2023-03-15T13:22:06.842Z", "title": "Python-based compiler achieves orders-of-magnitude speedups", "text": "In 2018, the Economist published an in-depth piece on the programming language Python. “In the past 12 months,” the article said, “Google users in America have searched for Python more often than for Kim Kardashian.” Reality TV stars, be wary.   The high-level language has earned its popularity, too, with legions of users flocking daily to the language for its ease of use due in part to its simple and easy-to-learn syntax. This led researchers from MIT's Computer Science and Artificial Intelligence Laboratory (CSAIL) and elsewhere to make a tool to help run Python code more efficiently and effectively while allowing for customization and adaptation to different needs and contexts. The compiler, which is a software tool that translates source code into machine code that can be executed by a computer’s processor, lets developers create new domain-specific languages (DSLs) within Python — which is typically orders of magnitude slower than languages like C or C++ — while still getting the performance benefits of those other languages.   DSLs are specialized languages tailored to specific tasks that can be much easier to work with than general-purpose programming languages. However, creating a new DSL from scratch can be a bit of a headache.  “We realized that people don’t necessarily want to learn a new language, or a new tool, especially those who are nontechnical. So we thought, let’s take Python syntax, semantics, and libraries and incorporate them into a new system built from the ground up,” says Ariya Shajii SM ’18, PhD ’21, lead author on a new paper about the team's new system, Codon. “The user simply writes Python like they’re used to, without having to worry about data types or performance, which we handle automatically — and the result is that their code runs 10 to 100 times faster than regular Python. Codon is already being used commercially in fields like quantitative finance, bioinformatics, and deep learning.”  The team put Codon through some rigorous testing, and it punched above its weight. Specifically, they took roughly 10 commonly used genomics applications written in Python and compiled them using Codon, and achieved five to 10 times speedups over the original hand-optimized implementations. Besides genomics, they explored applications in quantitative finance, which also handles big datasets and uses Python heavily. The Codon platform also has a parallel backend that lets users write Python code that can be explicitly compiled for GPUs or multiple cores, tasks which have traditionally required low-level programming expertise.   Pythons on a plane   Unlike languages like C and C++, which both come with a compiler that optimizes the generated code to improve its performance, Python is an interpreted language. There’s been a lot of effort put into trying to make Python faster, which the team says usually comes in the form of a “top-down approach,” which means taking the vanilla Python implementation and incorporating various optimizations or “just-in-time” compilation techniques — a method by which performance-critical pieces of the code are compiled during execution. These approaches excel at preserving backwards-compatibility, but drastically limit the kinds of speedups you can attain.  “We took more of a bottom-up approach, where we implemented everything from the ground up, which came with limitations, but a lot more flexibility,” says Shajii. “So, for example, we can’t support certain dynamic features, but we can play with optimizations and other static compilation techniques that you couldn’t do starting with the standard Python implementation. That was the key difference — not much effort had been put into a bottom-up approach, where large parts of the Python infrastructure are built from scratch.”  The first piece of the puzzle is feeding the compiler a piece of Python code. One of the critical first steps that is performed is called “type checking,” a process where, in your program, you figure out the different data types of each variable or function. For example, some could be integers, some could be strings, and some could be floating-point numbers — that’s something that regular Python doesn’t do. In regular Python, you have to deal with all that information when running the program, which is one of the factors making it so slow. Part of the innovation with Codon is that the tool does this type checking before running the program. That lets the compiler convert the code to native machine code, which avoids all of the overhead that Python has in dealing with data types at runtime.  “Python is the language of choice for domain experts that are not programming experts. If they write a program that gets popular, and many people start using it and run larger and larger datasets, then the lack of performance of Python becomes a critical barrier to success,” says Saman Amarasinghe, MIT professor of electrical engineering and computer science and CSAIL principal investigator. “Instead of needing to rewrite the program using a C-implemented library like NumPy or totally rewrite in a language like C, Codon can use the same Python implementation and give the same performance you'll get by rewriting in C. Thus, I believe Codon is the easiest path forward for successful Python applications that have hit a limit due to lack of performance.”   Faster than the speed of C  The other piece of the puzzle is the optimizations in the compiler. Working with the genomics plugin, for example, will perform its own set of optimizations that are specific to that computing domain, which involves working with genomic sequences and other biological data, for example. The result is an executable file that runs at the speed of C or C++, or even faster once domain-specific optimizations are applied.   While Codon currently covers a sizable subset of Python, it still needs to incorporate several dynamic features and expand its Python library coverage. The Codon team is working hard to close the gap with Python even further, and looks forward to releasing several new features over the coming months. Codon is currently publicly available on GitHub.  In addition to Amarasinghe, Shajii wrote the paper alongside Gabriel Ramirez ’21, MEng ’21, a former CSAIL student and current Jump Trading software engineer; Jessica Ray SM ’18, an associate research staff member at MIT Lincoln Laboratory; Bonnie Berger, MIT professor of mathematics and of electrical engineering and computer science and a CSAIL principal investigator; Haris Smajlović, graduate student at the University of Victoria; and Ibrahim Numanagić, a University of Victoria assistant professor in Computer Science and Canada Research Chair.  The research was presented at the ACM SIGPLAN 2023 International Conference on Compiler Construction. It was supported by Numanagić’s NSERC Discovery Grant, Canada Research Chair program, the U.S. Defense Advance Research Projects Agency, and the U.S. National Institutes of Health. Codon is currently maintained by Exaloop, Inc., a startup founded by some of the authors to popularize Codon.", "rating": 0}}, {"model": "news.post", "pk": 10, "fields": {"author": 1, "categoryType": "AR", "dateCreation": "2023-03-15T13:23:03.100Z", "title": "Mining the right transition metals in a vast chemical space", "text": "Swift and significant gains against climate change require the creation of novel, environmentally benign, and energy-efficient materials. One of the richest veins researchers hope to tap in creating such useful compounds is a vast chemical space where molecular combinations that offer remarkable optical, conductive, magnetic, and heat transfer properties await discovery.  But finding these new materials has been slow going.  “While computational modeling has enabled us to discover and predict properties of new materials much faster than experimentation, these models aren’t always trustworthy,” says Heather J. Kulik  PhD ’09, associate professor in the departments of Chemical Engineering and Chemistry. “In order to accelerate computational discovery of materials, we need better methods for removing uncertainty and making our predictions more accurate.”  A team from Kulik’s lab set out to address these challenges with a team including Chenru Duan PhD ’22.  A tool for building trust  Kulik and her group focus on transition metal complexes, molecules comprised of metals found in the middle of the periodic table that are surrounded by organic ligands. These complexes can be extremely reactive, which gives them a central role in catalyzing natural and industrial processes. By altering the organic and metal components in these molecules, scientists can generate materials with properties that can improve such applications as artificial photosynthesis, solar energy absorption and storage, higher efficiency OLEDS (organic light emitting diodes), and device miniaturization.  “Characterizing these complexes and discovering new materials currently happens slowly, often driven by a researcher’s intuition,” says Kulik. “And the process involves trade-offs: You might find a material that has good light-emitting properties, but the metal at the center may be something like iridium, which is exceedingly rare and toxic.”  Researchers attempting to identify nontoxic, earth-abundant transition metal complexes with useful properties tend to pursue a limited set of features, with only modest assurance that they are on the right track. “People continue to iterate on a particular ligand, and get stuck in local areas of opportunity, rather than conduct large-scale discovery,” says Kulik.  To address these screening inefficiencies, Kulik’s team developed a new approach — a machine-learning based “recommender” that lets researchers know the optimal model for pursuing their search. Their description of this tool was the subject of a paper in Nature Computational Science in December.  “This method outperforms all prior approaches and can tell people when to use methods and when they’ll be trustworthy,” says Kulik.  The team, led by Duan, began by investigating ways to improve the conventional screening approach, density functional theory (DFT), which is based on computational quantum mechanics. He built a machine learning platform to determine how accurate density functional models were in predicting structure and behavior of transition metal molecules.  “This tool learned which density functionals were the most reliable for specific material complexes,” says Kulik. “We verified this by testing the tool against materials it had never encountered before, where it in fact chose the most accurate density functionals for predicting the material’s property.”  A critical breakthrough for the team was its decision to use the electron density — a fundamental quantum mechanical property of atoms — as a machine learning input. This unique identifier, as well as the use of a neural network model to carry out the mapping, creates a powerful and efficient aide for researchers who want to determine whether they are using the appropriate density functional for characterizing their target transition metal complex. “A calculation that would take days or weeks, which makes computational screening nearly infeasible, can instead take only hours to produce a trustworthy result.”  Kulik has incorporated this tool into molSimplify, an open source code on the lab’s website, enabling researchers anywhere in the world to predict properties and model transition metal complexes.", "rating": 0}}, {"model": "news.post", "pk": 11, "fields": {"author": 1, "categoryType": "NW", "dateCreation": "2023-03-15T13:23:41.571Z", "title": "New “traffic cop” algorithm helps a drone swarm stay on task", "text": "How fresh are your data? For drones searching a disaster zone or robots inspecting a building, working with the freshest data is key to locating a survivor or reporting a potential hazard. But when multiple robots simultaneously relay time-sensitive information over a wireless network, a traffic jam of data can ensue. Any information that gets through is too stale to consider as a useful, real-time report.  Now, MIT engineers may have a solution. They’ve developed a method to tailor any wireless network to handle a high load of time-sensitive data coming from multiple sources. Their new approach, called WiSwarm, configures a wireless network to control the flow of information from multiple sources while ensuring the network is relaying the freshest data.  The team used their method to tweak a conventional Wi-Fi router, and showed that the tailored network could act like an efficient traffic cop, able to prioritize and relay the freshest data to keep multiple vehicle-tracking drones on task.  The team’s method, which they will present in May at IEEE’s International Conference on Computer Communications (INFOCOM), offers a practical way for multiple robots to communicate over available Wi-Fi networks so they don’t have to carry bulky and expensive communications and processing hardware onboard.  The study’s MIT authors are Vishrant Tripathi, Ezra Tal, Muhammad Shahir Rahman, Alexander Warren, Sertac Karaman, and Eytan Modiano of the Laboratory for Information and Decision Systems (LIDS), along with Igor Kadota SM ’16, PhD ’20 at Columbia University.  Last in line  The team’s approach departs from the typical way in which robots are designed to communicate data.  “What happens in most standard networking protocols is an approach of first come, first served,” Tripathi explains. “A video frame comes in, you process it. Another comes in, you process it. But if your task is time-sensitive, such as trying to detect where a moving object is, then all the old video frames are useless. What you want is the newest video frame.”  In theory, an alternative approach of “last in, first out” could help keep data fresh. The concept is similar to a chef putting out entreés one by one as they are hot off the line. If you want the freshest plate, you’d want the last one that joined the queue. The same goes for data, if what you care about is the “age of information,” or the most up-to-date data.  “Age-of-information is a new metric for information freshness that considers latency from the perspective of the application,” Modiano explains. “For example, the freshness of information is important for an autonomous vehicle that relies on various sensor inputs. A sensor that measures the proximity to obstacles in order to avoid collision requires fresher information than a sensor measuring fuel levels.”  The team looked to prioritize age-of information, by incorporating a “last in, first out” protocol for multiple robots working together on time-sensitive tasks. They aimed to do so over conventional wireless networks, as Wi-Fi is pervasive and doesn’t require bulky onboard communication hardware to access.  However, wireless networks come with a big drawback: They are distributed in nature and do not prioritize receiving data from any one source. A wireless channel can then quickly clog up when multiple sources simultaneously send data. Even with a “last in, first out” protocol, data collisions would occur. In a time-sensitive exercise, the system would break down.  Data priority  As a solution, the team developed WiSwarm — a scheduling algorithm that can be run on a centralized computer and paired with any wireless network to manage multiple data streams and prioritize the freshest data.  Rather than attempting to take in every data packet from every source at every moment in time, the algorithm determines which source in a network should send data next. That source (a drone or robot) would then observe a “last in, first out” protocol to send their freshest piece of data through the wireless network to a central processor.  The algorithm determines which source should relay data next by assessing three parameters: a drone’s general weight, or priority (for instance, a drone that is tracking a fast vehicle might have to update more frequently, and therefore would have higher priority over a drone tracking a slower vehicle); a drone’s age of information, or how long it’s been since a drone has sent an update; and a drone’s channel reliability, or likelihood of successfully transmitting data.  By multiplying these three parameters for each drone at any given time, the algorithm can schedule drones to report updates through a wireless network one at a time, without clogging the system, and in a way that provides the freshest data for successfully carrying out a time-sensitive task.   The team tested out their algorithm with multiple mobility-tracking drones. They outfitted flying drones with a small camera and a basic Wi-Fi-enabled computer chip, which it used to continuously relay images to a central computer rather than using a bulky, onboard computing system. They programmed the drones to fly over and follow small vehicles moving randomly on the ground.  When the team paired the network with its algorithm, the computer was able to receive the freshest images from the most relevant drones, which it used to then send commands back to the drones to keep them on the vehicle’s track.  When the researchers ran experiments with two drones, the method was able to relay data that was two times fresher, which resulted in six times better tracking, compared to when the two drones carried out the same experiment with Wi-Fi alone. When they expanded the system to five drones and five ground vehicles, Wi-Fi alone could not accommodate the heavier data traffic, and the drones quickly lost track of the ground vehicles. With WiSwarm, the network was better equipped and enabled all drones to keep tracking their respective vehicles.  “Ours is the first work to show that age-of-information can work for real robotics applications,” Tal says.  In the near future, cheap and nimble drones could work together and communicate over wireless networks to accomplish tasks such as inspecting buildings, agricultural fields, and wind and solar farms. Farther in the future, he sees the approach being essential for managing data streaming throughout smart cities.  “Imagine self-driving cars come to an intersection that has a sensor that sees something around the corner,” Karaman says. “Which car should get that data first? It’s a problem where timing and freshness of data matters.”", "rating": 0}}, {"model": "news.post", "pk": 12, "fields": {"author": 1, "categoryType": "NW", "dateCreation": "2023-03-15T13:24:27.675Z", "title": "It’s a weird, weird quantum world", "text": "In 1994, as Professor Peter Shor PhD ’85 tells it, internal seminars at AT&T Bell Labs were lively affairs. The audience of physicists was an active and inquisitive bunch, often pelting speakers with questions throughout their talks. Shor, who worked at Bell Labs at the time, remembers several occasions when a speaker couldn’t get past their third slide, as they attempted to address a rapid line of questioning before their time was up.  That year, when Shor took his turn to present an algorithm he had recently worked out, the physicists paid keen attention to Shor’s entire talk — and then some.  “Mine went pretty well,” he told an MIT audience yesterday.  In that 1994 seminar talk, Shor presented a proof that showed how a quantum system could be applied to solve a particular problem more quickly than a classical computer. That problem, known as the discrete logarithm problem, was known to be unsolvable by classical means. As such, discrete logarithms had been used as the basis for a handful of security systems at the time.  Shor’s work was the first to show that a quantum computer could solve a real, practical problem. His talk set the seminar abuzz, and the news spread, then became conflated. Four days after his initial talk, physicists across the country were assuming Shor had solved a related, though much thornier problem: prime factorization — the challenge of finding a very large number’s two prime factors. Though some security systems employ discrete logarithms, most encryption schemes today are based on prime factorization and the assumption that it is impossible to crack.   “It was like the children’s game of ‘telephone,’ where the rumor spread that I had figured out factoring,” Shor says. “And in the four days since [the talk], I had!”  By tweaking his original problem, Shor happened to find a similar quantum solution for prime factorization. His solution, known today as Shor’s algorithm, showed how a quantum computer could factorize very large numbers. Quantum computing, once thought of as a thought experiment, suddenly had in Shor’s algorithm an instruction manual for a very real, and potentially disruptive application. His work simultaneously ignited multiple new lines of research in quantum computing, information science, and cryptography.  The rest is history, the highlights of which Shor recounted to a standing-room-only audience in MIT’s Huntington Hall, Room 10-250. Shor, who is the Morss Professor of Applied Mathematics at MIT, spoke as this year’s recipient of the James R. Killian, Jr. Faculty Achievement Award, which is the highest honor the Institute faculty can bestow upon one of its members each academic year.  In introducing Shor’s talk, Lily Tsai, chair of the faculty, quoted the award citation:  “Without exception, the faculty who nominated him all commented on his vision, genius, and technical mastery, and commended him for the brilliance of his work,” Tsai said. “Professor Shor’s work demonstrates that quantum computers have the potential to open up new avenues of human thought and endeavor.”  A quantum history  During the one-hour lecture, Shor took the audience through a brief history of quantum computing, peppering the talk with personal recollections of his own role. The story, he said, begins in the 1930s with the discovery of quantum mechanics — the physical behavior of matter at the smallest, subatomic scales — and the question that soon followed: Why was quantum so strange?  Physicists grappled with the new description of the physical world, which was so different from the “classical” Newtonian mechanics that had been understood for centuries. Shor says that the physicist Erwin Schrödinger attempted to “illustrate the absurdity” of the new theory with his now-famous thought experiment involving a cat in a box: How can it embody both states — dead and alive? The exercise challenged the idea of superposition, a key property of quantum mechanics that predicts a quantum bit such as an atom should hold more than one state simultaneously.  Spookier still was the prediction of entanglement, which posed that two atoms could be inextricably linked. Any change to one should then affect the other, no matter the distance separating them.  “Nobody considered using this strangeness for information storage, until Wiesner,” Shor said.  Wiesner was Stephen Wiesner, who in the late 1960s was a graduate student at Columbia University who was later credited with formulating some of the basic principles of quantum information theory. Wiesner’s key contribution was a paper that was initially spurned. He had proposed a way to create “quantum money,” or currency that was resistant to forgery, by harnessing a strange property in which quantum states cannot be perfectly duplicated — a prediction known as the “no-cloning” theorem.  As Shor remembers it, Wiesner wrote out his idea on a typewriter, sent it off for consideration by his peers, and was roundly rejected. It wasn’t until another physicist, Charles Bennett, found the paper, “pulled it out of a drawer, and got it published,” solidifying Wiesner’s role in quantum computing’s history. Bennett went further, realizing that the basic idea of quantum money could be applied to develop a scheme of quantum key distribution, in which the security of a piece of information, such as a private key passed between parties, is protected by another weird quantum property.  Bennett worked out the idea with Gilles Brassard in 1984. The BB84 algorithm was the first protocol for a crypto system that relied entirely on the weird phenomena of quantum physics. Sometime in the 1980s, Bennett came around to Bell Labs to present BB84. It was Shor’s first time hearing of quantum computing, and he was hooked.  Shor initially tried to work out an answer to a question Bennett posed to the audience: How can the protocol be proven mathematically to indeed be secure? The problem, however, was too thorny, and Shor abandoned the question, though not the subject. He followed the efforts of his colleagues in the growing field of quantum information science, eventually landing on a paper by physicist Daniel Simon, who proposed something truly weird: that a system of quantum computing bits could solve a particular problem exponentially faster than a classical computer.  The problem itself, as Simon posed it, was an esoteric one, and his paper, like Wiesner’s, was initially rejected. But Shor saw something in its structure — specifically, that the problem related to the much more concrete problems of discrete logarithms and factoring. He worked from Simon’s starting point to see whether a quantum system could solve discrete logarithms more quickly than a classical system. His first attempts were a draw. The quantum algorithm solved a problem just as fast as its classical counterpart. But there were hints that it could do better.  “There’s still hope in trying,” Shor remembers thinking.  When he did work it out, he presented his algorithm for a quantum discrete log algorithm in the 1994 symposium at Bell Labs. In the four days since his talk, he managed to also work out his eponymous prime factorization algorithm.  The reception was overwhelming but also skeptical, as physicists assumed that a practical quantum computer would instantly crumble at the barest hint of noise, resulting in a cascade of errors in its factoring computation.  “I worried about this problem,” Shor said.  So, he again went to work, looking for a way to correct errors in a quantum system without disturbing the state of the computing quantum bits. He found an answer through concatenation, which broadly refers to a series of interconnected events. In his case, Shor found a way to link qubits, and store the information of one logical, or computing qubit among nine highly entangled, physical qubits. In this way, any error in the logical qubit can be measured and fixed within the physical qubits, without having to measure (and therefore destroy) the qubit involved in the actual computation.  Shor’s new algorithm was the first quantum error correcting code that proved a quantum computer could be tolerant to faults, and therefore a very real possibility.  “The world of quantum mechanics is not the world of your intuition,” Shor said in closing his remarks. “Quantum mechanics is the way the world really is.”", "rating": 0}}, {"model": "news.post", "pk": 13, "fields": {"author": 2, "categoryType": "NW", "dateCreation": "2023-03-31T16:10:26.769Z", "title": "Want to host DjangoCon Europe 2024?", "text": "DjangoCon Europe 2023 will be held May 29th-June 2nd in Edinburgh, Scotland, but we're already looking ahead to next year's conference. Could your town - or your football stadium, circus tent, private island or city hall - host this wonderful community event?  Hosting a DjangoCon is an ambitious undertaking. It's hard work, but each year it has been successfully run by a team of community volunteers, not all of whom have had previous experience - more important is enthusiasm, organisational skills, the ability to plan and manage budgets, time and people - and plenty of time to invest in the project.  You'll find plenty of support on offer from previous DjangoCon organisers, so you won't be on your own.", "rating": 0}}, {"model": "news.post", "pk": 14, "fields": {"author": 1, "categoryType": "NW", "dateCreation": "2023-03-31T16:53:36.115Z", "title": "Django Developers Survey 2022 Results", "text": "We are excited to share the results of the annual Django Developers Survey which was conducted this year in collaboration with JetBrains. Almost 5,000 Django users from 248 countries took the survey which covered a broad list of topics including Django usage, operating systems, libraries, tools, and many other insights.  View the results of the 2022 Django Developers Survey.  If you have feedback on the findings and how to improve the survey in future years please share on the official Django Forum.  Thank you to everyone who participated!", "rating": 0}}, {"model": "news.post", "pk": 15, "fields": {"author": 1, "categoryType": "NW", "dateCreation": "2023-03-31T17:03:51.371Z", "title": "Django 4.2 beta 1 released", "text": "Django 4.2 beta 1 is now available. It represents the second stage in the 4.2 release cycle and is an opportunity for you to try out the changes coming in Django 4.2.  Django 4.2 has a farrago of new features which you can read about in the in-development 4.2 release notes.  Only bugs in new features and regressions from earlier versions of Django will be fixed between now and 4.2 final (also, translations will be updated following the \"string freeze\" when the release candidate is issued). The current release schedule calls for a release candidate in a month from now with the final release to follow about two weeks after that around April 3. Early and often testing from the community will help minimize the number of bugs in the release. Updates on the release schedule schedule are available on the Django forum.  As with all alpha and beta packages, this is not for production use. But if you'd like to take some of the new features for a spin, or to help find and fix bugs (which should be reported to the issue tracker), you can grab a copy of the beta package from our downloads page or on PyPI.  The PGP key ID used for this release is Mariusz Felisiak: 2EF56372BA48CD1B.", "rating": 0}}, {"model": "news.post", "pk": 16, "fields": {"author": 1, "categoryType": "NW", "dateCreation": "2023-04-03T14:10:32.741Z", "title": "Researchers warn of Wi-Fi security flaw affecting iOS, Android, Linux", "text": "The problem is how the standard handles power-saving The researchers have identified a fundamental flaw in the design of the IEEE 802.11 Wi-Fi standard attackers could exploit to trick access points (Wi-Fi base stations) into leaking information. The researchers do not claim the vulnerability is being actively exploited, but warn that it might enable the interception of network traffic.  The attack exploits an inherent vulnerability in the data containers (network frames) routers rely on to move information across the network and how access points handle devices that enter power-saving mode.", "rating": 0}}, {"model": "news.post", "pk": 17, "fields": {"author": 1, "categoryType": "AR", "dateCreation": "2023-04-03T21:02:03.435Z", "title": "Models", "text": "A model is the single, definitive source of information about your data. It contains the essential fields and behaviors of the data you’re storing. Generally, each model maps to a single database table.  The basics:  Each model is a Python class that subclasses django.db.models.Model.  Each attribute of the model represents a database field.  With all of this, Django gives you an automatically-generated database-access API; see Making queries.", "rating": 0}}, {"model": "news.post", "pk": 18, "fields": {"author": 1, "categoryType": "AR", "dateCreation": "2023-04-03T21:19:19.836Z", "title": "Django post_save() signal implementation", "text": "I have a question about django.  I have ManyToMany Models here  class Product(models.Model):      name = models.CharField(max_length=255)      price = models.DecimalField(default=0.0, max_digits=9, decimal_places=2)      stock = models.IntegerField(default=0)       def  __unicode__(self):          return self.name  class Cart(models.Model):     customer = models.ForeignKey(Customer)     products = models.ManyToManyField(Product, through='TransactionDetail')     t_date = models.DateField(default=datetime.now())     t_sum = models.FloatField(default=0.0)      def __unicode__(self):          return str(self.id)  class TransactionDetail(models.Model):     product = models.ForeignKey(Product)     cart = models.ForeignKey(Cart)     amount = models.IntegerField(default=0) For 1 cart object created, I can insert as many as new TransactionDetail object (the product and amount). My question is. How can I implement the trigger? What I want is whenever a Transaction detail is created, I want the amount of the product's stock is substracted by the amount in the transactiondetail.  I've read about post_save() but I'm not sure how to implement it. maybe something like this  when:  post_save(TransactionDetail,         Cart) #Cart object where TransactionDetail.cart= Cart.id Cart.stock -= TransactionDetail.amount", "rating": 0}}, {"model": "news.post", "pk": 19, "fields": {"author": 1, "categoryType": "NW", "dateCreation": "2023-04-03T21:32:27.401Z", "title": "Olympic stars given makeshift phones amid fears of China spying", "text": "British athletes have been offered temporary phones and their Team USA rivals have reportedly been told to use burner devices ahead of the Beijing Olympics, acting after investigations suggested the mandated Games app is not safe.  All attendees of the Games, which take place from February 4-20 2022, are required to submit their health status to the app, which internet experts say is at serious risk of data breaches and may have a list of censored terms including references to Chinese people, Muslims, Jews and the host nation's president, Xi Jinping.  Encryption of users' voice audio and file transfers can be \"trivially sidestepped\" by hackers because of a \"devastating flaw\" in the app, according to the damning findings of a report by cybersecurity group Citizenlab.", "rating": 0}}, {"model": "news.post", "pk": 20, "fields": {"author": 1, "categoryType": "NW", "dateCreation": "2023-04-03T21:33:26.056Z", "title": "gsfavcxdcvz", "text": "sdefvdsvdsZVsdVdsvzsdaDvbdsZFVsVsdv", "rating": 0}}, {"model": "news.post", "pk": 21, "fields": {"author": 1, "categoryType": "AR", "dateCreation": "2023-04-10T17:45:34.604Z", "title": "Olympic stars given makeshift phones amid fears of China spying", "text": "British athletes have been offered temporary phones and their Team USA rivals have reportedly been told to use burner devices ahead of the Beijing Olympics, acting after investigations suggested the mandated Games app is not safe.  All attendees of the Games, which take place from February 4-20 2022, are required to submit their health status to the app, which internet experts say is at serious risk of data breaches and may have a list of censored terms including references to Chinese people, Muslims, Jews and the host nation's president, Xi Jinping.  Encryption of users' voice audio and file transfers can be \"trivially sidestepped\" by hackers because of a \"devastating flaw\" in the app, according to the damning findings of a report by cybersecurity group Citizenlab.", "rating": 0}}, {"model": "news.post", "pk": 22, "fields": {"author": 1, "categoryType": "AR", "dateCreation": "2023-04-10T18:26:21.606Z", "title": "World University Rankings 2023 by subject: computer science", "text": "aaaThe computer science subject table uses the same trusted and rigorous performance indicators as the Times Higher Education World University Rankings 2023, but the methodology has been recalibrated to suit the discipline.  This year’s table includes 974 universities, up from 892 last year.  View the World University Rankings 2023 by subject: computer science methodology  The University of Oxford leads the table for the fifth consecutive year. The Massachusetts Institute of Technology (MIT) and Stanford University take the second and third places. The Technical University of Munich, one of only two German institutions in the top 50, is the only newcomer to the top 10. It claims 10th place, having climbed four places from 14th.  Many ranking in the top 400 for the first time are in the Arab region. These include Jouf University of Saudi Arabia and Minia University of Egypt in the 251–300 band; and Jordan’s Al-Balqa Applied University and Pakistan’s University of Engineering and Technology, Taxila in the 301-400 band.  Read our analysis of the subject rankings 2023 results  View the full results of the overall World University Rankings 2023", "rating": 0}}, {"model": "news.post", "pk": 23, "fields": {"author": 2, "categoryType": "AR", "dateCreation": "2023-04-10T18:30:12.884Z", "title": "University of Oxford", "text": "The University of Oxford is the oldest university in the English-speaking world and the world’s second oldest surviving university. While its exact founding date is unknown, there is evidence that teaching took place as far back as 1096.  Located in and around Oxford’s medieval city centre, the university comprises 44 colleges and halls, and over 100 libraries, making it the largest library system in the UK.  Students number around 22,000 in total, just over half of whom are undergraduates while over 40 per cent are international, representing 140 countries between them.  Called the \"city of dreaming spires\" by Victorian poet, Matthew Arnold, Oxford has the youngest population of any city in England and Wales: nearly a quarter of its residents are university students, which gives Oxford a noticeable buzz.  Oxford has an alumni network of over 250,000 individuals, including more than 120 Olympic medallists, 26 Nobel Prize winners, seven poets laureate, and over 30 modern world leaders (Bill Clinton, Aung San Suu Kyi, Indira Gandhi and 26 UK Prime Ministers, among them).  The university is associated with 11 winners of the Nobel Prize in chemistry, five in physics and 16 in medicine. Notable Oxford thinkers and scientists include Tim Berners-Lee, Stephen Hawking and Richard Dawkins. The actors Hugh Grant and Rosamund Pike also went to Oxford, as did the writers Oscar Wilde, Graham Greene, Vikram Seth and Philip Pullman.  Oxford’s first international student, named Emo of Friesland, was enrolled in 1190, while the modern day university prides itself on having an ‘international character’ with connections to almost every country in the world and 40% of its faculty drawn from overseas.  As a modern, research-driven university, Oxford has numerous strengths but cites particular prowess in the sciences, having recently ranked number one in the world for medicine (if its medical sciences division was a university in its own right, it would be the fourth largest in the UK) and among the top ten universities globally for life sciences, physical sciences, social sciences, and the arts and humanities.", "rating": 0}}, {"model": "news.post", "pk": 24, "fields": {"author": 1, "categoryType": "NW", "dateCreation": "2023-04-10T18:53:00.799Z", "title": "Massachusetts Institute of Technology", "text": "ABOUT MASSACHUSETTS INSTITUTE OF TECHNOLOGY The Massachusetts Institute of Technology (MIT) is an independent, coeducational, private research university based in the city of Cambridge, Massachusetts.  Established in 1861, MIT aims to ‘further knowledge and prepare students in science, technology and other fields of study that will best benefit the nation and the world today’. Its motto is Mens et Manus, which translates as “Mind and Hand”.  The university lays claim to 85 Nobel Laureates, 58 National Medal of Science winners, 29 National Medal of Technology and Innovation winners and 45 MacArthur Fellows. Among its impressive alumni is Kofi Annan, former secretary-general of the United Nations.  Scientific discoveries and technological advances accredited to MIT include the first chemical synthesis of penicillin, the development of radar, the discovery of quarks, and the invention of magnetic core memory, which enabled the development of digital computers.  MIT is currently organised into five different schools: architecture and planning, engineering, humanities, arts and social sciences, management and science.  It is home to around 1,000 faculty members and over 11,000 undergraduate and graduate students. MIT’s current areas of research include digital learning, sustainable energy, Big Data, human health and much more.  In addition to its emphasis on innovation and entrepreneurship, MIT also boasts a diverse and vibrant campus environment with a wide array of student groups. The campus is arranged over 168 acres within Cambridge, and features 18 student residences, 26 acres of playing fields, 20 gardens and green-space areas, as well as over 100 public works of art.  MIT estimates that all its living alumni have between them launched more than 30,000 active companies, created 4.6 million jobs and generated roughly $1.9 trillion in annual revenue.  Taken together, this ‘MIT Nation’ is equivalent, they say, to the 10th-largest economy in the world.", "rating": 0}}, {"model": "news.postcategory", "pk": 1, "fields": {"postThrough": 1, "categoryThrough": 1}}, {"model": "news.postcategory", "pk": 2, "fields": {"postThrough": 2, "categoryThrough": 1}}, {"model": "news.postcategory", "pk": 5, "fields": {"postThrough": 4, "categoryThrough": 1}}, {"model": "news.postcategory", "pk": 6, "fields": {"postThrough": 5, "categoryThrough": 2}}, {"model": "news.postcategory", "pk": 7, "fields": {"postThrough": 6, "categoryThrough": 3}}, {"model": "news.postcategory", "pk": 8, "fields": {"postThrough": 7, "categoryThrough": 4}}, {"model": "news.postcategory", "pk": 9, "fields": {"postThrough": 8, "categoryThrough": 4}}, {"model": "news.postcategory", "pk": 10, "fields": {"postThrough": 9, "categoryThrough": 1}}, {"model": "news.postcategory", "pk": 11, "fields": {"postThrough": 10, "categoryThrough": 2}}, {"model": "news.postcategory", "pk": 12, "fields": {"postThrough": 11, "categoryThrough": 2}}, {"model": "news.postcategory", "pk": 13, "fields": {"postThrough": 12, "categoryThrough": 3}}, {"model": "news.postcategory", "pk": 14, "fields": {"postThrough": 13, "categoryThrough": 2}}, {"model": "news.postcategory", "pk": 15, "fields": {"postThrough": 14, "categoryThrough": 2}}, {"model": "news.postcategory", "pk": 16, "fields": {"postThrough": 15, "categoryThrough": 2}}, {"model": "news.postcategory", "pk": 17, "fields": {"postThrough": 16, "categoryThrough": 3}}, {"model": "news.postcategory", "pk": 18, "fields": {"postThrough": 17, "categoryThrough": 3}}, {"model": "news.postcategory", "pk": 19, "fields": {"postThrough": 18, "categoryThrough": 3}}, {"model": "news.postcategory", "pk": 20, "fields": {"postThrough": 19, "categoryThrough": 3}}, {"model": "news.postcategory", "pk": 21, "fields": {"postThrough": 20, "categoryThrough": 3}}, {"model": "news.postcategory", "pk": 22, "fields": {"postThrough": 21, "categoryThrough": 1}}, {"model": "news.postcategory", "pk": 23, "fields": {"postThrough": 22, "categoryThrough": 4}}, {"model": "news.postcategory", "pk": 24, "fields": {"postThrough": 23, "categoryThrough": 4}}, {"model": "news.postcategory", "pk": 25, "fields": {"postThrough": 24, "categoryThrough": 4}}, {"model": "news.comment", "pk": 1, "fields": {"commentPost": 1, "commentUser": 1, "text": "If you can not completely refuse fast food, you should be more particular about products when choosing the menu. It is advisable to stop preference on dietary dishes, vegetable salads with olive oil.", "dateCreation": "2023-03-03T14:00:56.131Z", "rating": -2}}, {"model": "news.comment", "pk": 2, "fields": {"commentPost": 2, "commentUser": 2, "text": "Do not use spices, mayonnaise and fatty sauces. It is very important to chew food thoroughly and never to drink carbonated water. All these rules will help to fans of fast food to reduce the risk of disease. ", "dateCreation": "2023-03-03T14:02:32.906Z", "rating": 12}}, {"model": "news.comment", "pk": 3, "fields": {"commentPost": 2, "commentUser": 2, "text": "Soou GooD", "dateCreation": "2023-03-03T14:02:50.882Z", "rating": 3}}, {"model": "news.subscriber", "pk": 20, "fields": {"user": 6, "category": 2}}, {"model": "news.subscriber", "pk": 21, "fields": {"user": 6, "category": 2}}, {"model": "news.subscriber", "pk": 22, "fields": {"user": 6, "category": 2}}, {"model": "sites.site", "pk": 1, "fields": {"domain": "http://127.0.0.1", "name": "http://127.0.0.1"}}, {"model": "account.emailaddress", "pk": 2, "fields": {"user": 6, "email": "test1@mail.ru", "verified": true, "primary": true}}, {"model": "account.emailaddress", "pk": 4, "fields": {"user": 8, "email": "Zela52@yandex.ru", "verified": true, "primary": true}}, {"model": "account.emailaddress", "pk": 5, "fields": {"user": 9, "email": "zelenkov.maik@yandex.ru", "verified": true, "primary": true}}, {"model": "account.emailaddress", "pk": 14, "fields": {"user": 18, "email": "test2@mail.ru", "verified": false, "primary": true}}, {"model": "account.emailaddress", "pk": 15, "fields": {"user": 19, "email": "test30@mail.ru", "verified": true, "primary": true}}, {"model": "socialaccount.socialapp", "pk": 1, "fields": {"provider": "yandex", "name": "Ya", "client_id": "7744dbf3b842476da7ded97cbb59cfa3", "secret": "13b59119b7cf48f7bdc41cde32786dd2", "key": "", "sites": [1]}}, {"model": "socialaccount.socialaccount", "pk": 3, "fields": {"user": 8, "provider": "yandex", "uid": "519905155", "last_login": "2023-03-27T20:20:12.825Z", "date_joined": "2023-03-27T20:20:12.825Z", "extra_data": "{\"id\": \"519905155\", \"login\": \"Zela52\", \"client_id\": \"7744dbf3b842476da7ded97cbb59cfa3\", \"display_name\": \"Zela52\", \"real_name\": \"\\u041c\\u0438\\u0445\\u0430\\u0438\\u043b \\u0417\\u0435\\u043b\\u0435\\u043d\\u043a\\u043e\\u0432\", \"first_name\": \"\\u041c\\u0438\\u0445\\u0430\\u0438\\u043b\", \"last_name\": \"\\u0417\\u0435\\u043b\\u0435\\u043d\\u043a\\u043e\\u0432\", \"sex\": \"male\", \"default_email\": \"Zela52@yandex.ru\", \"emails\": [\"Zela52@yandex.ru\"], \"psuid\": \"1.AAmKTQ.ocz09MHElVRC-Vd8OoN30w.skfIvPetAXbdPeDQb7IP9w\"}"}}, {"model": "django_apscheduler.djangojob", "pk": "delete_old_job_executions", "fields": {"next_run_time": "2023-04-09T21:00:00Z", "job_state": "gAWVlQQAAAAAAAB9lCiMB3ZlcnNpb26USwGMAmlklIwZZGVsZXRlX29sZF9qb2JfZXhlY3V0aW9uc5SMBGZ1bmOUjEFuZXdzLm1hbmFnZW1lbnQuY29tbWFuZHMucnVuYXBzY2hlZHVsZXI6ZGVsZXRlX29sZF9qb2JfZXhlY3V0aW9uc5SMB3RyaWdnZXKUjBlhcHNjaGVkdWxlci50cmlnZ2Vycy5jcm9ulIwLQ3JvblRyaWdnZXKUk5QpgZR9lChoAUsCjAh0aW1lem9uZZSMG3B5dHpfZGVwcmVjYXRpb25fc2hpbS5faW1wbJSMCXdyYXBfem9uZZSTlIwIYnVpbHRpbnOUjAdnZXRhdHRylJOUjBJiYWNrcG9ydHMuem9uZWluZm+UjAhab25lSW5mb5STlIwJX3VucGlja2xllIaUUpSMDUV1cm9wZS9Nb3Njb3eUSwGGlFKUaBmGlFKUjApzdGFydF9kYXRllE6MCGVuZF9kYXRllE6MBmZpZWxkc5RdlCiMIGFwc2NoZWR1bGVyLnRyaWdnZXJzLmNyb24uZmllbGRzlIwJQmFzZUZpZWxklJOUKYGUfZQojARuYW1llIwEeWVhcpSMCmlzX2RlZmF1bHSUiIwLZXhwcmVzc2lvbnOUXZSMJWFwc2NoZWR1bGVyLnRyaWdnZXJzLmNyb24uZXhwcmVzc2lvbnOUjA1BbGxFeHByZXNzaW9ulJOUKYGUfZSMBHN0ZXCUTnNiYXViaCKMCk1vbnRoRmllbGSUk5QpgZR9lChoJ4wFbW9udGiUaCmIaCpdlGguKYGUfZRoMU5zYmF1YmgijA9EYXlPZk1vbnRoRmllbGSUk5QpgZR9lChoJ4wDZGF5lGgpiGgqXZRoLimBlH2UaDFOc2JhdWJoIowJV2Vla0ZpZWxklJOUKYGUfZQoaCeMBHdlZWuUaCmIaCpdlGguKYGUfZRoMU5zYmF1YmgijA5EYXlPZldlZWtGaWVsZJSTlCmBlH2UKGgnjAtkYXlfb2Zfd2Vla5RoKYloKl2UaCyMFldlZWtkYXlSYW5nZUV4cHJlc3Npb26Uk5QpgZR9lChoMU6MBWZpcnN0lEsAjARsYXN0lEsAdWJhdWJoJCmBlH2UKGgnjARob3VylGgpiWgqXZRoLIwPUmFuZ2VFeHByZXNzaW9ulJOUKYGUfZQoaDFOaFRLAGhVSwB1YmF1YmgkKYGUfZQoaCeMBm1pbnV0ZZRoKYloKl2UaFspgZR9lChoMU5oVEsAaFVLAHViYXViaCQpgZR9lChoJ4wGc2Vjb25klGgpiGgqXZRoWymBlH2UKGgxTmhUSwBoVUsAdWJhdWJljAZqaXR0ZXKUTnVijAhleGVjdXRvcpSMB2RlZmF1bHSUjARhcmdzlCmMBmt3YXJnc5R9lGgnaAOMEm1pc2ZpcmVfZ3JhY2VfdGltZZRLAYwIY29hbGVzY2WUiIwNbWF4X2luc3RhbmNlc5RLAYwNbmV4dF9ydW5fdGltZZSMCGRhdGV0aW1llIwIZGF0ZXRpbWWUk5RDCgfnBAoAAAAAAACUaB2GlFKUdS4="}}, {"model": "django_apscheduler.djangojob", "pk": "my_job", "fields": {"next_run_time": "2023-04-03T21:46:20Z", "job_state": "gAWVEQQAAAAAAAB9lCiMB3ZlcnNpb26USwGMAmlklIwGbXlfam9ilIwEZnVuY5SMLm5ld3MubWFuYWdlbWVudC5jb21tYW5kcy5ydW5hcHNjaGVkdWxlcjpteV9qb2KUjAd0cmlnZ2VylIwZYXBzY2hlZHVsZXIudHJpZ2dlcnMuY3JvbpSMC0Nyb25UcmlnZ2VylJOUKYGUfZQoaAFLAowIdGltZXpvbmWUjBtweXR6X2RlcHJlY2F0aW9uX3NoaW0uX2ltcGyUjAl3cmFwX3pvbmWUk5SMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwSYmFja3BvcnRzLnpvbmVpbmZvlIwIWm9uZUluZm+Uk5SMCV91bnBpY2tsZZSGlFKUjA1FdXJvcGUvTW9zY293lEsBhpRSlGgZhpRSlIwKc3RhcnRfZGF0ZZROjAhlbmRfZGF0ZZROjAZmaWVsZHOUXZQojCBhcHNjaGVkdWxlci50cmlnZ2Vycy5jcm9uLmZpZWxkc5SMCUJhc2VGaWVsZJSTlCmBlH2UKIwEbmFtZZSMBHllYXKUjAppc19kZWZhdWx0lIiMC2V4cHJlc3Npb25zlF2UjCVhcHNjaGVkdWxlci50cmlnZ2Vycy5jcm9uLmV4cHJlc3Npb25zlIwNQWxsRXhwcmVzc2lvbpSTlCmBlH2UjARzdGVwlE5zYmF1YmgijApNb250aEZpZWxklJOUKYGUfZQoaCeMBW1vbnRolGgpiGgqXZRoLimBlH2UaDFOc2JhdWJoIowPRGF5T2ZNb250aEZpZWxklJOUKYGUfZQoaCeMA2RheZRoKYhoKl2UaC4pgZR9lGgxTnNiYXViaCKMCVdlZWtGaWVsZJSTlCmBlH2UKGgnjAR3ZWVrlGgpiGgqXZRoLimBlH2UaDFOc2JhdWJoIowORGF5T2ZXZWVrRmllbGSUk5QpgZR9lChoJ4wLZGF5X29mX3dlZWuUaCmIaCpdlGguKYGUfZRoMU5zYmF1YmgkKYGUfZQoaCeMBGhvdXKUaCmIaCpdlGguKYGUfZRoMU5zYmF1YmgkKYGUfZQoaCeMBm1pbnV0ZZRoKYhoKl2UaC4pgZR9lGgxTnNiYXViaCQpgZR9lChoJ4wGc2Vjb25klGgpiGgqXZRoLimBlH2UaDFOc2JhdWJljAZqaXR0ZXKUTnVijAhleGVjdXRvcpSMB2RlZmF1bHSUjARhcmdzlCmMBmt3YXJnc5R9lGgnaAOMEm1pc2ZpcmVfZ3JhY2VfdGltZZRLAYwIY29hbGVzY2WUiIwNbWF4X2luc3RhbmNlc5RLAYwNbmV4dF9ydW5fdGltZZSMCGRhdGV0aW1llIwIZGF0ZXRpbWWUk5RDCgfnBAQALhQAAACUaB2GlFKUdS4="}}, {"model": "django_apscheduler.djangojobexecution", "pk": 1, "fields": {"job": "my_job", "status": "Error!", "run_time": "2023-03-31T18:06:40Z", "duration": "0.02", "finished": "1680286000.02", "exception": "Cannot resolve keyword 'date' into field. Choices are: author, author_id, categoryType, comment, dateCreation, id, postCategory, postcategory, rating, text, title", "traceback": "  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\apscheduler\\executors\\base.py\", line 125, in run_job\n    retval = job.func(*job.args, **job.kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\NewsNote\\news\\management\\commands\\runapscheduler.py\", line 24, in my_job\n    posts = Post.objects.filter(date__gte=last_week)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\manager.py\", line 85, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1421, in filter\n    return self._filter_or_exclude(False, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1439, in _filter_or_exclude\n    clone._filter_or_exclude_inplace(negate, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1446, in _filter_or_exclude_inplace\n    self._query.add_q(Q(*args, **kwargs))\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1532, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1562, in _add_q\n    child_clause, needed_inner = self.build_filter(\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1407, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1217, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1709, in names_to_path\n    raise FieldError(\n"}}, {"model": "django_apscheduler.djangojobexecution", "pk": 2, "fields": {"job": "my_job", "status": "Error!", "run_time": "2023-03-31T18:06:50Z", "duration": "0.03", "finished": "1680286010.03", "exception": "Cannot resolve keyword 'date' into field. Choices are: author, author_id, categoryType, comment, dateCreation, id, postCategory, postcategory, rating, text, title", "traceback": "  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\apscheduler\\executors\\base.py\", line 125, in run_job\n    retval = job.func(*job.args, **job.kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\NewsNote\\news\\management\\commands\\runapscheduler.py\", line 24, in my_job\n    posts = Post.objects.filter(date__gte=last_week)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\manager.py\", line 85, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1421, in filter\n    return self._filter_or_exclude(False, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1439, in _filter_or_exclude\n    clone._filter_or_exclude_inplace(negate, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1446, in _filter_or_exclude_inplace\n    self._query.add_q(Q(*args, **kwargs))\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1532, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1562, in _add_q\n    child_clause, needed_inner = self.build_filter(\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1407, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1217, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1709, in names_to_path\n    raise FieldError(\n"}}, {"model": "django_apscheduler.djangojobexecution", "pk": 3, "fields": {"job": "my_job", "status": "Error!", "run_time": "2023-03-31T18:07:00Z", "duration": "0.03", "finished": "1680286020.03", "exception": "Cannot resolve keyword 'date' into field. Choices are: author, author_id, categoryType, comment, dateCreation, id, postCategory, postcategory, rating, text, title", "traceback": "  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\apscheduler\\executors\\base.py\", line 125, in run_job\n    retval = job.func(*job.args, **job.kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\NewsNote\\news\\management\\commands\\runapscheduler.py\", line 24, in my_job\n    posts = Post.objects.filter(date__gte=last_week)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\manager.py\", line 85, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1421, in filter\n    return self._filter_or_exclude(False, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1439, in _filter_or_exclude\n    clone._filter_or_exclude_inplace(negate, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1446, in _filter_or_exclude_inplace\n    self._query.add_q(Q(*args, **kwargs))\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1532, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1562, in _add_q\n    child_clause, needed_inner = self.build_filter(\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1407, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1217, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1709, in names_to_path\n    raise FieldError(\n"}}, {"model": "django_apscheduler.djangojobexecution", "pk": 4, "fields": {"job": "my_job", "status": "Error!", "run_time": "2023-03-31T18:07:10Z", "duration": "0.05", "finished": "1680286030.05", "exception": "Cannot resolve keyword 'date' into field. Choices are: author, author_id, categoryType, comment, dateCreation, id, postCategory, postcategory, rating, text, title", "traceback": "  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\apscheduler\\executors\\base.py\", line 125, in run_job\n    retval = job.func(*job.args, **job.kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\NewsNote\\news\\management\\commands\\runapscheduler.py\", line 24, in my_job\n    posts = Post.objects.filter(date__gte=last_week)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\manager.py\", line 85, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1421, in filter\n    return self._filter_or_exclude(False, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1439, in _filter_or_exclude\n    clone._filter_or_exclude_inplace(negate, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1446, in _filter_or_exclude_inplace\n    self._query.add_q(Q(*args, **kwargs))\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1532, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1562, in _add_q\n    child_clause, needed_inner = self.build_filter(\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1407, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1217, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1709, in names_to_path\n    raise FieldError(\n"}}, {"model": "django_apscheduler.djangojobexecution", "pk": 5, "fields": {"job": "my_job", "status": "Error!", "run_time": "2023-03-31T18:07:20Z", "duration": "0.05", "finished": "1680286040.05", "exception": "Cannot resolve keyword 'date' into field. Choices are: author, author_id, categoryType, comment, dateCreation, id, postCategory, postcategory, rating, text, title", "traceback": "  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\apscheduler\\executors\\base.py\", line 125, in run_job\n    retval = job.func(*job.args, **job.kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\NewsNote\\news\\management\\commands\\runapscheduler.py\", line 24, in my_job\n    posts = Post.objects.filter(date__gte=last_week)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\manager.py\", line 85, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1421, in filter\n    return self._filter_or_exclude(False, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1439, in _filter_or_exclude\n    clone._filter_or_exclude_inplace(negate, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1446, in _filter_or_exclude_inplace\n    self._query.add_q(Q(*args, **kwargs))\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1532, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1562, in _add_q\n    child_clause, needed_inner = self.build_filter(\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1407, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1217, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1709, in names_to_path\n    raise FieldError(\n"}}, {"model": "django_apscheduler.djangojobexecution", "pk": 6, "fields": {"job": "my_job", "status": "Error!", "run_time": "2023-03-31T18:07:30Z", "duration": "0.04", "finished": "1680286050.04", "exception": "Cannot resolve keyword 'date' into field. Choices are: author, author_id, categoryType, comment, dateCreation, id, postCategory, postcategory, rating, text, title", "traceback": "  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\apscheduler\\executors\\base.py\", line 125, in run_job\n    retval = job.func(*job.args, **job.kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\NewsNote\\news\\management\\commands\\runapscheduler.py\", line 24, in my_job\n    posts = Post.objects.filter(date__gte=last_week)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\manager.py\", line 85, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1421, in filter\n    return self._filter_or_exclude(False, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1439, in _filter_or_exclude\n    clone._filter_or_exclude_inplace(negate, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1446, in _filter_or_exclude_inplace\n    self._query.add_q(Q(*args, **kwargs))\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1532, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1562, in _add_q\n    child_clause, needed_inner = self.build_filter(\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1407, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1217, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1709, in names_to_path\n    raise FieldError(\n"}}, {"model": "django_apscheduler.djangojobexecution", "pk": 7, "fields": {"job": "my_job", "status": "Error!", "run_time": "2023-03-31T18:07:40Z", "duration": "0.03", "finished": "1680286060.03", "exception": "Cannot resolve keyword 'date' into field. Choices are: author, author_id, categoryType, comment, dateCreation, id, postCategory, postcategory, rating, text, title", "traceback": "  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\apscheduler\\executors\\base.py\", line 125, in run_job\n    retval = job.func(*job.args, **job.kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\NewsNote\\news\\management\\commands\\runapscheduler.py\", line 24, in my_job\n    posts = Post.objects.filter(date__gte=last_week)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\manager.py\", line 85, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1421, in filter\n    return self._filter_or_exclude(False, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1439, in _filter_or_exclude\n    clone._filter_or_exclude_inplace(negate, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1446, in _filter_or_exclude_inplace\n    self._query.add_q(Q(*args, **kwargs))\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1532, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1562, in _add_q\n    child_clause, needed_inner = self.build_filter(\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1407, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1217, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1709, in names_to_path\n    raise FieldError(\n"}}, {"model": "django_apscheduler.djangojobexecution", "pk": 8, "fields": {"job": "my_job", "status": "Error!", "run_time": "2023-03-31T18:07:50Z", "duration": "0.05", "finished": "1680286070.05", "exception": "Cannot resolve keyword 'date' into field. Choices are: author, author_id, categoryType, comment, dateCreation, id, postCategory, postcategory, rating, text, title", "traceback": "  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\apscheduler\\executors\\base.py\", line 125, in run_job\n    retval = job.func(*job.args, **job.kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\NewsNote\\news\\management\\commands\\runapscheduler.py\", line 24, in my_job\n    posts = Post.objects.filter(date__gte=last_week)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\manager.py\", line 85, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1421, in filter\n    return self._filter_or_exclude(False, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1439, in _filter_or_exclude\n    clone._filter_or_exclude_inplace(negate, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1446, in _filter_or_exclude_inplace\n    self._query.add_q(Q(*args, **kwargs))\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1532, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1562, in _add_q\n    child_clause, needed_inner = self.build_filter(\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1407, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1217, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1709, in names_to_path\n    raise FieldError(\n"}}, {"model": "django_apscheduler.djangojobexecution", "pk": 9, "fields": {"job": "my_job", "status": "Error!", "run_time": "2023-03-31T18:08:00Z", "duration": "0.05", "finished": "1680286080.05", "exception": "Cannot resolve keyword 'date' into field. Choices are: author, author_id, categoryType, comment, dateCreation, id, postCategory, postcategory, rating, text, title", "traceback": "  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\apscheduler\\executors\\base.py\", line 125, in run_job\n    retval = job.func(*job.args, **job.kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\NewsNote\\news\\management\\commands\\runapscheduler.py\", line 24, in my_job\n    posts = Post.objects.filter(date__gte=last_week)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\manager.py\", line 85, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1421, in filter\n    return self._filter_or_exclude(False, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1439, in _filter_or_exclude\n    clone._filter_or_exclude_inplace(negate, args, kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 1446, in _filter_or_exclude_inplace\n    self._query.add_q(Q(*args, **kwargs))\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1532, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1562, in _add_q\n    child_clause, needed_inner = self.build_filter(\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1407, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1217, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1709, in names_to_path\n    raise FieldError(\n"}}, {"model": "django_apscheduler.djangojobexecution", "pk": 10, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-03-31T18:09:10Z", "duration": "0.06", "finished": "1680286150.06", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 11, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-03-31T18:09:20Z", "duration": "0.06", "finished": "1680286160.06", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 12, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-03-31T18:09:30Z", "duration": "0.07", "finished": "1680286170.07", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 13, "fields": {"job": "my_job", "status": "Error!", "run_time": "2023-03-31T18:11:50Z", "duration": "0.05", "finished": "1680286310.05", "exception": "name 'pk' is not defined", "traceback": "  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\apscheduler\\executors\\base.py\", line 125, in run_job\n    retval = job.func(*job.args, **job.kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\NewsNote\\news\\management\\commands\\runapscheduler.py\", line 30, in my_job\n    'Link': f'{settings.SITE_URL}/news/{pk}',\n"}}, {"model": "django_apscheduler.djangojobexecution", "pk": 14, "fields": {"job": "my_job", "status": "Error!", "run_time": "2023-03-31T18:12:00Z", "duration": "0.07", "finished": "1680286320.07", "exception": "name 'pk' is not defined", "traceback": "  File \"C:\\projects\\Skillfactory\\News Portal\\venv\\lib\\site-packages\\apscheduler\\executors\\base.py\", line 125, in run_job\n    retval = job.func(*job.args, **job.kwargs)\n  File \"C:\\projects\\Skillfactory\\News Portal\\NewsNote\\news\\management\\commands\\runapscheduler.py\", line 30, in my_job\n    'Link': f'{settings.SITE_URL}/news/{pk}',\n"}}, {"model": "django_apscheduler.djangojobexecution", "pk": 15, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-03-31T18:16:50Z", "duration": "0.05", "finished": "1680286610.05", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 16, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-03-31T18:17:00Z", "duration": "0.06", "finished": "1680286620.06", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 17, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:45:56Z", "duration": "0.07", "finished": "1680558356.07", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 18, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:45:57Z", "duration": "0.08", "finished": "1680558357.08", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 19, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:45:58Z", "duration": "0.07", "finished": "1680558358.07", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 20, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:45:59Z", "duration": "0.09", "finished": "1680558359.09", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 21, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:00Z", "duration": "0.08", "finished": "1680558360.08", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 22, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:01Z", "duration": "0.08", "finished": "1680558361.08", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 23, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:02Z", "duration": "0.07", "finished": "1680558362.07", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 24, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:03Z", "duration": "0.08", "finished": "1680558363.08", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 25, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:04Z", "duration": "0.08", "finished": "1680558364.08", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 26, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:05Z", "duration": "0.08", "finished": "1680558365.08", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 27, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:06Z", "duration": "0.09", "finished": "1680558366.09", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 28, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:07Z", "duration": "0.09", "finished": "1680558367.09", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 29, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:08Z", "duration": "0.09", "finished": "1680558368.09", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 30, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:09Z", "duration": "0.07", "finished": "1680558369.07", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 31, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:10Z", "duration": "0.07", "finished": "1680558370.07", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 32, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:11Z", "duration": "0.07", "finished": "1680558371.07", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 33, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:12Z", "duration": "0.06", "finished": "1680558372.06", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 34, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:13Z", "duration": "0.07", "finished": "1680558373.07", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 35, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:14Z", "duration": "0.07", "finished": "1680558374.07", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 36, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:15Z", "duration": "0.08", "finished": "1680558375.08", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 37, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:16Z", "duration": "0.07", "finished": "1680558376.07", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 38, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:17Z", "duration": "0.07", "finished": "1680558377.07", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 39, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:18Z", "duration": "0.08", "finished": "1680558378.08", "exception": null, "traceback": null}}, {"model": "django_apscheduler.djangojobexecution", "pk": 40, "fields": {"job": "my_job", "status": "Executed", "run_time": "2023-04-03T21:46:19Z", "duration": "0.07", "finished": "1680558379.07", "exception": null, "traceback": null}}]
